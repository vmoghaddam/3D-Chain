//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(API.Models.EPAGRIFFINEntities),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsf3501d435207384076f8867cd0b9c03753b0a7f3dd4c05a7334b47a5bcc48634))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework 6 Power Tools", "0.9.2.0")]
    internal sealed class ViewsForBaseEntitySetsf3501d435207384076f8867cd0b9c03753b0a7f3dd4c05a7334b47a5bcc48634 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "f3501d435207384076f8867cd0b9c03753b0a7f3dd4c05a7334b47a5bcc48634"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "EPAGRIFFINModelStoreContainer.__MigrationHistory")
            {
                return GetView0();
            }

            if (extentName == "EPAGRIFFINEntities.C__MigrationHistory")
            {
                return GetView1();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.AspNetRoleClaims")
            {
                return GetView2();
            }

            if (extentName == "EPAGRIFFINEntities.AspNetRoleClaims")
            {
                return GetView3();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.AspNetRoles")
            {
                return GetView4();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.AspNetUserClaims")
            {
                return GetView5();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.AspNetUserLogins")
            {
                return GetView6();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.AspNetUsers")
            {
                return GetView7();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.AspNetUserRoles")
            {
                return GetView8();
            }

            if (extentName == "EPAGRIFFINEntities.AspNetRoles")
            {
                return GetView9();
            }

            if (extentName == "EPAGRIFFINEntities.AspNetUserClaims")
            {
                return GetView10();
            }

            if (extentName == "EPAGRIFFINEntities.AspNetUserLogins")
            {
                return GetView11();
            }

            if (extentName == "EPAGRIFFINEntities.AspNetUsers")
            {
                return GetView12();
            }

            if (extentName == "EPAGRIFFINEntities.AspNetUserRoles")
            {
                return GetView13();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.AspNetUserTokens")
            {
                return GetView14();
            }

            if (extentName == "EPAGRIFFINEntities.AspNetUserTokens")
            {
                return GetView15();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.AssignedRole")
            {
                return GetView16();
            }

            if (extentName == "EPAGRIFFINEntities.AssignedRoles")
            {
                return GetView17();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.City")
            {
                return GetView18();
            }

            if (extentName == "EPAGRIFFINEntities.Cities")
            {
                return GetView19();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.CompanyRate")
            {
                return GetView20();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.CompanySlider")
            {
                return GetView21();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.NetworkGroup")
            {
                return GetView22();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.PersonAccomplishment")
            {
                return GetView23();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.PersonAward")
            {
                return GetView24();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.PersonCertification")
            {
                return GetView25();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.PersonNetwork")
            {
                return GetView26();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.PersonPatent")
            {
                return GetView27();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.PersonProject")
            {
                return GetView28();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.PersonPublication")
            {
                return GetView29();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.Printer")
            {
                return GetView30();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.Printer2Material")
            {
                return GetView31();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.PrinterMaterial")
            {
                return GetView32();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.PrintingMaterial")
            {
                return GetView33();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.Review")
            {
                return GetView34();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.UserContentActivity")
            {
                return GetView35();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.Company")
            {
                return GetView36();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.Person")
            {
                return GetView37();
            }

            if (extentName == "EPAGRIFFINEntities.CompanyRates")
            {
                return GetView38();
            }

            if (extentName == "EPAGRIFFINEntities.CompanySliders")
            {
                return GetView39();
            }

            if (extentName == "EPAGRIFFINEntities.NetworkGroups")
            {
                return GetView40();
            }

            if (extentName == "EPAGRIFFINEntities.PersonAccomplishments")
            {
                return GetView41();
            }

            if (extentName == "EPAGRIFFINEntities.PersonAwards")
            {
                return GetView42();
            }

            if (extentName == "EPAGRIFFINEntities.PersonCertifications")
            {
                return GetView43();
            }

            if (extentName == "EPAGRIFFINEntities.PersonNetworks")
            {
                return GetView44();
            }

            if (extentName == "EPAGRIFFINEntities.PersonPatents")
            {
                return GetView45();
            }

            if (extentName == "EPAGRIFFINEntities.PersonProjects")
            {
                return GetView46();
            }

            if (extentName == "EPAGRIFFINEntities.PersonPublications")
            {
                return GetView47();
            }

            if (extentName == "EPAGRIFFINEntities.Printers")
            {
                return GetView48();
            }

            if (extentName == "EPAGRIFFINEntities.Printer2Material")
            {
                return GetView49();
            }

            if (extentName == "EPAGRIFFINEntities.PrinterMaterials")
            {
                return GetView50();
            }

            if (extentName == "EPAGRIFFINEntities.PrintingMaterials")
            {
                return GetView51();
            }

            if (extentName == "EPAGRIFFINEntities.Reviews")
            {
                return GetView52();
            }

            if (extentName == "EPAGRIFFINEntities.UserContentActivities")
            {
                return GetView53();
            }

            if (extentName == "EPAGRIFFINEntities.Companies")
            {
                return GetView54();
            }

            if (extentName == "EPAGRIFFINEntities.People")
            {
                return GetView55();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.Country")
            {
                return GetView56();
            }

            if (extentName == "EPAGRIFFINEntities.Countries")
            {
                return GetView57();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.Manufacturer")
            {
                return GetView58();
            }

            if (extentName == "EPAGRIFFINEntities.Manufacturers")
            {
                return GetView59();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.Option")
            {
                return GetView60();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.Printer2Optic")
            {
                return GetView61();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.PrinterTechnology")
            {
                return GetView62();
            }

            if (extentName == "EPAGRIFFINEntities.Options")
            {
                return GetView63();
            }

            if (extentName == "EPAGRIFFINEntities.Printer2Optic")
            {
                return GetView64();
            }

            if (extentName == "EPAGRIFFINEntities.PrinterTechnologies")
            {
                return GetView65();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.PrinterModel")
            {
                return GetView66();
            }

            if (extentName == "EPAGRIFFINEntities.PrinterModels")
            {
                return GetView67();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.RefreshToken")
            {
                return GetView68();
            }

            if (extentName == "EPAGRIFFINEntities.RefreshTokens")
            {
                return GetView69();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.ReviewRate")
            {
                return GetView70();
            }

            if (extentName == "EPAGRIFFINEntities.ReviewRates")
            {
                return GetView71();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.State")
            {
                return GetView72();
            }

            if (extentName == "EPAGRIFFINEntities.States")
            {
                return GetView73();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.ViewAward")
            {
                return GetView74();
            }

            if (extentName == "EPAGRIFFINEntities.ViewAwards")
            {
                return GetView75();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.ViewCertification")
            {
                return GetView76();
            }

            if (extentName == "EPAGRIFFINEntities.ViewCertifications")
            {
                return GetView77();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.ViewCountry")
            {
                return GetView78();
            }

            if (extentName == "EPAGRIFFINEntities.ViewCountries")
            {
                return GetView79();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.ViewOption")
            {
                return GetView80();
            }

            if (extentName == "EPAGRIFFINEntities.ViewOptions")
            {
                return GetView81();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.ViewPersonNetwork")
            {
                return GetView82();
            }

            if (extentName == "EPAGRIFFINEntities.ViewPersonNetworks")
            {
                return GetView83();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.ViewPersonPatent")
            {
                return GetView84();
            }

            if (extentName == "EPAGRIFFINEntities.ViewPersonPatents")
            {
                return GetView85();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.ViewPersonPublication")
            {
                return GetView86();
            }

            if (extentName == "EPAGRIFFINEntities.ViewPersonPublications")
            {
                return GetView87();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.ViewPersonReview")
            {
                return GetView88();
            }

            if (extentName == "EPAGRIFFINEntities.ViewPersonReviews")
            {
                return GetView89();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.ViewPrinter")
            {
                return GetView90();
            }

            if (extentName == "EPAGRIFFINEntities.ViewPrinters")
            {
                return GetView91();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.ViewPrinter2Optic")
            {
                return GetView92();
            }

            if (extentName == "EPAGRIFFINEntities.ViewPrinter2Optic")
            {
                return GetView93();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.ViewPrinterTechnology")
            {
                return GetView94();
            }

            if (extentName == "EPAGRIFFINEntities.ViewPrinterTechnologies")
            {
                return GetView95();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.ViewProject")
            {
                return GetView96();
            }

            if (extentName == "EPAGRIFFINEntities.ViewProjects")
            {
                return GetView97();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.ViewUserContentActivity")
            {
                return GetView98();
            }

            if (extentName == "EPAGRIFFINEntities.ViewUserContentActivities")
            {
                return GetView99();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.ViewManufacturer")
            {
                return GetView100();
            }

            if (extentName == "EPAGRIFFINEntities.ViewManufacturers")
            {
                return GetView101();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.ViewPrinterModel")
            {
                return GetView102();
            }

            if (extentName == "EPAGRIFFINEntities.ViewPrinterModels")
            {
                return GetView103();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.Printer2")
            {
                return GetView104();
            }

            if (extentName == "EPAGRIFFINEntities.Printer2")
            {
                return GetView105();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.ViewPrinter2")
            {
                return GetView106();
            }

            if (extentName == "EPAGRIFFINEntities.ViewPrinter2")
            {
                return GetView107();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.Material")
            {
                return GetView108();
            }

            if (extentName == "EPAGRIFFINEntities.Materials")
            {
                return GetView109();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.Supplier")
            {
                return GetView110();
            }

            if (extentName == "EPAGRIFFINEntities.Suppliers")
            {
                return GetView111();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.ViewAMProcess")
            {
                return GetView112();
            }

            if (extentName == "EPAGRIFFINEntities.ViewAMProcesses")
            {
                return GetView113();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.ViewAmTechnology")
            {
                return GetView114();
            }

            if (extentName == "EPAGRIFFINEntities.ViewAmTechnologies")
            {
                return GetView115();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.ViewCompanyPrinter")
            {
                return GetView116();
            }

            if (extentName == "EPAGRIFFINEntities.ViewCompanyPrinters")
            {
                return GetView117();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.CompanyPrinter")
            {
                return GetView118();
            }

            if (extentName == "EPAGRIFFINEntities.CompanyPrinters")
            {
                return GetView119();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.ViewCompany")
            {
                return GetView120();
            }

            if (extentName == "EPAGRIFFINEntities.ViewCompanies")
            {
                return GetView121();
            }

            if (extentName == "EPAGRIFFINModelStoreContainer.ViewPerson")
            {
                return GetView122();
            }

            if (extentName == "EPAGRIFFINEntities.ViewPersons")
            {
                return GetView123();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.__MigrationHistory.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing __MigrationHistory
        [EPAGRIFFINModel.Store.__MigrationHistory](T1.[__MigrationHistory.MigrationId], T1.[__MigrationHistory.ContextKey], T1.[__MigrationHistory.Model], T1.[__MigrationHistory.ProductVersion])
    FROM (
        SELECT 
            T.MigrationId AS [__MigrationHistory.MigrationId], 
            T.ContextKey AS [__MigrationHistory.ContextKey], 
            T.Model AS [__MigrationHistory.Model], 
            T.ProductVersion AS [__MigrationHistory.ProductVersion], 
            True AS _from0
        FROM EPAGRIFFINEntities.C__MigrationHistory AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.C__MigrationHistory.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing C__MigrationHistory
        [EPAGRIFFINModel.C__MigrationHistory](T1.[C__MigrationHistory.MigrationId], T1.[C__MigrationHistory.ContextKey], T1.[C__MigrationHistory.Model], T1.[C__MigrationHistory.ProductVersion])
    FROM (
        SELECT 
            T.MigrationId AS [C__MigrationHistory.MigrationId], 
            T.ContextKey AS [C__MigrationHistory.ContextKey], 
            T.Model AS [C__MigrationHistory.Model], 
            T.ProductVersion AS [C__MigrationHistory.ProductVersion], 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.__MigrationHistory AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.AspNetRoleClaims.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AspNetRoleClaims
        [EPAGRIFFINModel.Store.AspNetRoleClaims](T1.AspNetRoleClaims_Id, T1.AspNetRoleClaims_ClaimType, T1.AspNetRoleClaims_ClaimValue, T1.AspNetRoleClaims_RoleId)
    FROM (
        SELECT 
            T.Id AS AspNetRoleClaims_Id, 
            T.ClaimType AS AspNetRoleClaims_ClaimType, 
            T.ClaimValue AS AspNetRoleClaims_ClaimValue, 
            T.RoleId AS AspNetRoleClaims_RoleId, 
            True AS _from0
        FROM EPAGRIFFINEntities.AspNetRoleClaims AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.AspNetRoleClaims.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AspNetRoleClaims
        [EPAGRIFFINModel.AspNetRoleClaim](T1.AspNetRoleClaim_Id, T1.AspNetRoleClaim_ClaimType, T1.AspNetRoleClaim_ClaimValue, T1.AspNetRoleClaim_RoleId)
    FROM (
        SELECT 
            T.Id AS AspNetRoleClaim_Id, 
            T.ClaimType AS AspNetRoleClaim_ClaimType, 
            T.ClaimValue AS AspNetRoleClaim_ClaimValue, 
            T.RoleId AS AspNetRoleClaim_RoleId, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.AspNetRoleClaims AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.AspNetRoles.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AspNetRoles
        [EPAGRIFFINModel.Store.AspNetRoles](T1.AspNetRoles_Id, T1.AspNetRoles_Name)
    FROM (
        SELECT 
            T.Id AS AspNetRoles_Id, 
            T.Name AS AspNetRoles_Name, 
            True AS _from0
        FROM EPAGRIFFINEntities.AspNetRoles AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.AspNetUserClaims.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AspNetUserClaims
        [EPAGRIFFINModel.Store.AspNetUserClaims](T1.AspNetUserClaims_Id, T1.AspNetUserClaims_UserId, T1.AspNetUserClaims_ClaimType, T1.AspNetUserClaims_ClaimValue)
    FROM (
        SELECT 
            T.Id AS AspNetUserClaims_Id, 
            T.UserId AS AspNetUserClaims_UserId, 
            T.ClaimType AS AspNetUserClaims_ClaimType, 
            T.ClaimValue AS AspNetUserClaims_ClaimValue, 
            True AS _from0
        FROM EPAGRIFFINEntities.AspNetUserClaims AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.AspNetUserLogins.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AspNetUserLogins
        [EPAGRIFFINModel.Store.AspNetUserLogins](T1.AspNetUserLogins_LoginProvider, T1.AspNetUserLogins_ProviderKey, T1.AspNetUserLogins_UserId)
    FROM (
        SELECT 
            T.LoginProvider AS AspNetUserLogins_LoginProvider, 
            T.ProviderKey AS AspNetUserLogins_ProviderKey, 
            T.UserId AS AspNetUserLogins_UserId, 
            True AS _from0
        FROM EPAGRIFFINEntities.AspNetUserLogins AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.AspNetUsers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AspNetUsers
        [EPAGRIFFINModel.Store.AspNetUsers](T1.AspNetUsers_Id, T1.AspNetUsers_Email, T1.AspNetUsers_EmailConfirmed, T1.AspNetUsers_PasswordHash, T1.AspNetUsers_SecurityStamp, T1.AspNetUsers_PhoneNumber, T1.AspNetUsers_PhoneNumberConfirmed, T1.AspNetUsers_TwoFactorEnabled, T1.AspNetUsers_LockoutEndDateUtc, T1.AspNetUsers_LockoutEnabled, T1.AspNetUsers_AccessFailedCount, T1.AspNetUsers_UserName)
    FROM (
        SELECT 
            T.Id AS AspNetUsers_Id, 
            T.Email AS AspNetUsers_Email, 
            T.EmailConfirmed AS AspNetUsers_EmailConfirmed, 
            T.PasswordHash AS AspNetUsers_PasswordHash, 
            T.SecurityStamp AS AspNetUsers_SecurityStamp, 
            T.PhoneNumber AS AspNetUsers_PhoneNumber, 
            T.PhoneNumberConfirmed AS AspNetUsers_PhoneNumberConfirmed, 
            T.TwoFactorEnabled AS AspNetUsers_TwoFactorEnabled, 
            T.LockoutEndDateUtc AS AspNetUsers_LockoutEndDateUtc, 
            T.LockoutEnabled AS AspNetUsers_LockoutEnabled, 
            T.AccessFailedCount AS AspNetUsers_AccessFailedCount, 
            T.UserName AS AspNetUsers_UserName, 
            True AS _from0
        FROM EPAGRIFFINEntities.AspNetUsers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.AspNetUserRoles.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AspNetUserRoles
        [EPAGRIFFINModel.Store.AspNetUserRoles](T1.AspNetUserRoles_UserId, T1.AspNetUserRoles_RoleId)
    FROM (
        SELECT 
            Key(T.AspNetUser).Id AS AspNetUserRoles_UserId, 
            Key(T.AspNetRole).Id AS AspNetUserRoles_RoleId, 
            True AS _from0
        FROM EPAGRIFFINEntities.AspNetUserRoles AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.AspNetRoles.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AspNetRoles
        [EPAGRIFFINModel.AspNetRole](T1.AspNetRole_Id, T1.AspNetRole_Name)
    FROM (
        SELECT 
            T.Id AS AspNetRole_Id, 
            T.Name AS AspNetRole_Name, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.AspNetRoles AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.AspNetUserClaims.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AspNetUserClaims
        [EPAGRIFFINModel.AspNetUserClaim](T1.AspNetUserClaim_Id, T1.AspNetUserClaim_UserId, T1.AspNetUserClaim_ClaimType, T1.AspNetUserClaim_ClaimValue)
    FROM (
        SELECT 
            T.Id AS AspNetUserClaim_Id, 
            T.UserId AS AspNetUserClaim_UserId, 
            T.ClaimType AS AspNetUserClaim_ClaimType, 
            T.ClaimValue AS AspNetUserClaim_ClaimValue, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.AspNetUserClaims AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.AspNetUserLogins.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AspNetUserLogins
        [EPAGRIFFINModel.AspNetUserLogin](T1.AspNetUserLogin_LoginProvider, T1.AspNetUserLogin_ProviderKey, T1.AspNetUserLogin_UserId)
    FROM (
        SELECT 
            T.LoginProvider AS AspNetUserLogin_LoginProvider, 
            T.ProviderKey AS AspNetUserLogin_ProviderKey, 
            T.UserId AS AspNetUserLogin_UserId, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.AspNetUserLogins AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.AspNetUsers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AspNetUsers
        [EPAGRIFFINModel.AspNetUser](T1.AspNetUser_Id, T1.AspNetUser_Email, T1.AspNetUser_EmailConfirmed, T1.AspNetUser_PasswordHash, T1.AspNetUser_SecurityStamp, T1.AspNetUser_PhoneNumber, T1.AspNetUser_PhoneNumberConfirmed, T1.AspNetUser_TwoFactorEnabled, T1.AspNetUser_LockoutEndDateUtc, T1.AspNetUser_LockoutEnabled, T1.AspNetUser_AccessFailedCount, T1.AspNetUser_UserName)
    FROM (
        SELECT 
            T.Id AS AspNetUser_Id, 
            T.Email AS AspNetUser_Email, 
            T.EmailConfirmed AS AspNetUser_EmailConfirmed, 
            T.PasswordHash AS AspNetUser_PasswordHash, 
            T.SecurityStamp AS AspNetUser_SecurityStamp, 
            T.PhoneNumber AS AspNetUser_PhoneNumber, 
            T.PhoneNumberConfirmed AS AspNetUser_PhoneNumberConfirmed, 
            T.TwoFactorEnabled AS AspNetUser_TwoFactorEnabled, 
            T.LockoutEndDateUtc AS AspNetUser_LockoutEndDateUtc, 
            T.LockoutEnabled AS AspNetUser_LockoutEnabled, 
            T.AccessFailedCount AS AspNetUser_AccessFailedCount, 
            T.UserName AS AspNetUser_UserName, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.AspNetUsers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.AspNetUserRoles.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AspNetUserRoles
        [EPAGRIFFINModel.AspNetUserRoles](T3.AspNetUserRoles_AspNetRole, T3.AspNetUserRoles_AspNetUser)
    FROM (
        SELECT -- Constructing AspNetRole
            CreateRef(EPAGRIFFINEntities.AspNetRoles, row(T2.AspNetUserRoles_AspNetRole_Id), [EPAGRIFFINModel.AspNetRole]) AS AspNetUserRoles_AspNetRole, 
            T2.AspNetUserRoles_AspNetUser
        FROM (
            SELECT -- Constructing AspNetUser
                T1.AspNetUserRoles_AspNetRole_Id, 
                CreateRef(EPAGRIFFINEntities.AspNetUsers, row(T1.AspNetUserRoles_AspNetUser_Id), [EPAGRIFFINModel.AspNetUser]) AS AspNetUserRoles_AspNetUser
            FROM (
                SELECT 
                    T.RoleId AS AspNetUserRoles_AspNetRole_Id, 
                    T.UserId AS AspNetUserRoles_AspNetUser_Id, 
                    True AS _from0
                FROM EPAGRIFFINModelStoreContainer.AspNetUserRoles AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.AspNetUserTokens.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AspNetUserTokens
        [EPAGRIFFINModel.Store.AspNetUserTokens](T1.AspNetUserTokens_UserId, T1.AspNetUserTokens_LoginProvider, T1.AspNetUserTokens_Name, T1.AspNetUserTokens_Value)
    FROM (
        SELECT 
            T.UserId AS AspNetUserTokens_UserId, 
            T.LoginProvider AS AspNetUserTokens_LoginProvider, 
            T.Name AS AspNetUserTokens_Name, 
            T.[Value] AS AspNetUserTokens_Value, 
            True AS _from0
        FROM EPAGRIFFINEntities.AspNetUserTokens AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.AspNetUserTokens.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AspNetUserTokens
        [EPAGRIFFINModel.AspNetUserToken](T1.AspNetUserToken_UserId, T1.AspNetUserToken_LoginProvider, T1.AspNetUserToken_Name, T1.AspNetUserToken_Value)
    FROM (
        SELECT 
            T.UserId AS AspNetUserToken_UserId, 
            T.LoginProvider AS AspNetUserToken_LoginProvider, 
            T.Name AS AspNetUserToken_Name, 
            T.[Value] AS AspNetUserToken_Value, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.AspNetUserTokens AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.AssignedRole.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView16()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AssignedRole
        [EPAGRIFFINModel.Store.AssignedRole](T1.AssignedRole_AssignedRoleID, T1.AssignedRole_AssignedRole, T1.AssignedRole_PreferredTerm, T1.AssignedRole_SpecificCategory, T1.AssignedRole_Category1Tags, T1.AssignedRole_OnetSocCode, T1.AssignedRole_SocDetailedCode, T1.AssignedRole_SumJobTitleUsageCount, T1.AssignedRole_SumScore, T1.AssignedRole_PublicKeywords, T1.AssignedRole_SearchKeywords, T1.AssignedRole_HumanSearchKeywords, T1.AssignedRole_IndividualSearchWords, T1.AssignedRole_CommonSearches, T1.AssignedRole_IndeedSearch, T1.AssignedRole_LinkedInSearches, T1.AssignedRole_SimplyHiredSearches, T1.AssignedRole_LinkUpSearches, T1.AssignedRole_SalaryWebPage, T1.AssignedRole_AssignedRoleStatus, T1.AssignedRole_AssignedRoleStatusComment)
    FROM (
        SELECT 
            T.AssignedRoleID AS AssignedRole_AssignedRoleID, 
            T.AssignedRole1 AS AssignedRole_AssignedRole, 
            T.PreferredTerm AS AssignedRole_PreferredTerm, 
            T.SpecificCategory AS AssignedRole_SpecificCategory, 
            T.Category1Tags AS AssignedRole_Category1Tags, 
            T.OnetSocCode AS AssignedRole_OnetSocCode, 
            T.SocDetailedCode AS AssignedRole_SocDetailedCode, 
            T.SumJobTitleUsageCount AS AssignedRole_SumJobTitleUsageCount, 
            T.SumScore AS AssignedRole_SumScore, 
            T.PublicKeywords AS AssignedRole_PublicKeywords, 
            T.SearchKeywords AS AssignedRole_SearchKeywords, 
            T.HumanSearchKeywords AS AssignedRole_HumanSearchKeywords, 
            T.IndividualSearchWords AS AssignedRole_IndividualSearchWords, 
            T.CommonSearches AS AssignedRole_CommonSearches, 
            T.IndeedSearch AS AssignedRole_IndeedSearch, 
            T.LinkedInSearches AS AssignedRole_LinkedInSearches, 
            T.SimplyHiredSearches AS AssignedRole_SimplyHiredSearches, 
            T.LinkUpSearches AS AssignedRole_LinkUpSearches, 
            T.SalaryWebPage AS AssignedRole_SalaryWebPage, 
            T.AssignedRoleStatus AS AssignedRole_AssignedRoleStatus, 
            T.AssignedRoleStatusComment AS AssignedRole_AssignedRoleStatusComment, 
            True AS _from0
        FROM EPAGRIFFINEntities.AssignedRoles AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.AssignedRoles.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView17()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AssignedRoles
        [EPAGRIFFINModel.AssignedRole](T1.AssignedRole_AssignedRoleID, T1.AssignedRole_AssignedRole1, T1.AssignedRole_PreferredTerm, T1.AssignedRole_SpecificCategory, T1.AssignedRole_Category1Tags, T1.AssignedRole_OnetSocCode, T1.AssignedRole_SocDetailedCode, T1.AssignedRole_SumJobTitleUsageCount, T1.AssignedRole_SumScore, T1.AssignedRole_PublicKeywords, T1.AssignedRole_SearchKeywords, T1.AssignedRole_HumanSearchKeywords, T1.AssignedRole_IndividualSearchWords, T1.AssignedRole_CommonSearches, T1.AssignedRole_IndeedSearch, T1.AssignedRole_LinkedInSearches, T1.AssignedRole_SimplyHiredSearches, T1.AssignedRole_LinkUpSearches, T1.AssignedRole_SalaryWebPage, T1.AssignedRole_AssignedRoleStatus, T1.AssignedRole_AssignedRoleStatusComment)
    FROM (
        SELECT 
            T.AssignedRoleID AS AssignedRole_AssignedRoleID, 
            T.AssignedRole AS AssignedRole_AssignedRole1, 
            T.PreferredTerm AS AssignedRole_PreferredTerm, 
            T.SpecificCategory AS AssignedRole_SpecificCategory, 
            T.Category1Tags AS AssignedRole_Category1Tags, 
            T.OnetSocCode AS AssignedRole_OnetSocCode, 
            T.SocDetailedCode AS AssignedRole_SocDetailedCode, 
            T.SumJobTitleUsageCount AS AssignedRole_SumJobTitleUsageCount, 
            T.SumScore AS AssignedRole_SumScore, 
            T.PublicKeywords AS AssignedRole_PublicKeywords, 
            T.SearchKeywords AS AssignedRole_SearchKeywords, 
            T.HumanSearchKeywords AS AssignedRole_HumanSearchKeywords, 
            T.IndividualSearchWords AS AssignedRole_IndividualSearchWords, 
            T.CommonSearches AS AssignedRole_CommonSearches, 
            T.IndeedSearch AS AssignedRole_IndeedSearch, 
            T.LinkedInSearches AS AssignedRole_LinkedInSearches, 
            T.SimplyHiredSearches AS AssignedRole_SimplyHiredSearches, 
            T.LinkUpSearches AS AssignedRole_LinkUpSearches, 
            T.SalaryWebPage AS AssignedRole_SalaryWebPage, 
            T.AssignedRoleStatus AS AssignedRole_AssignedRoleStatus, 
            T.AssignedRoleStatusComment AS AssignedRole_AssignedRoleStatusComment, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.AssignedRole AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.City.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView18()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing City
        [EPAGRIFFINModel.Store.City](T1.City_Id, T1.City_Name, T1.City_StateId, T1.City_AccuWeatherCode, T1.City_Latitude, T1.City_Longitude)
    FROM (
        SELECT 
            T.Id AS City_Id, 
            T.Name AS City_Name, 
            T.StateId AS City_StateId, 
            T.AccuWeatherCode AS City_AccuWeatherCode, 
            T.Latitude AS City_Latitude, 
            T.Longitude AS City_Longitude, 
            True AS _from0
        FROM EPAGRIFFINEntities.Cities AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.Cities.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView19()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Cities
        [EPAGRIFFINModel.City](T1.City_Id, T1.City_Name, T1.City_StateId, T1.City_AccuWeatherCode, T1.City_Latitude, T1.City_Longitude)
    FROM (
        SELECT 
            T.Id AS City_Id, 
            T.Name AS City_Name, 
            T.StateId AS City_StateId, 
            T.AccuWeatherCode AS City_AccuWeatherCode, 
            T.Latitude AS City_Latitude, 
            T.Longitude AS City_Longitude, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.City AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.CompanyRate.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView20()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CompanyRate
        [EPAGRIFFINModel.Store.CompanyRate](T1.CompanyRate_Id, T1.CompanyRate_Rate, T1.CompanyRate_Date, T1.CompanyRate_Remark, T1.CompanyRate_PersonId, T1.CompanyRate_CompanyId)
    FROM (
        SELECT 
            T.Id AS CompanyRate_Id, 
            T.Rate AS CompanyRate_Rate, 
            T.Date AS CompanyRate_Date, 
            T.Remark AS CompanyRate_Remark, 
            T.PersonId AS CompanyRate_PersonId, 
            T.CompanyId AS CompanyRate_CompanyId, 
            True AS _from0
        FROM EPAGRIFFINEntities.CompanyRates AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.CompanySlider.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView21()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CompanySlider
        [EPAGRIFFINModel.Store.CompanySlider](T1.CompanySlider_Id, T1.CompanySlider_Url, T1.CompanySlider_TypeID, T1.CompanySlider_CompanyId, T1.CompanySlider_Remark)
    FROM (
        SELECT 
            T.Id AS CompanySlider_Id, 
            T.Url AS CompanySlider_Url, 
            T.TypeID AS CompanySlider_TypeID, 
            T.CompanyId AS CompanySlider_CompanyId, 
            T.Remark AS CompanySlider_Remark, 
            True AS _from0
        FROM EPAGRIFFINEntities.CompanySliders AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.NetworkGroup.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView22()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing NetworkGroup
        [EPAGRIFFINModel.Store.NetworkGroup](T1.NetworkGroup_Id, T1.NetworkGroup_Title, T1.NetworkGroup_Remark)
    FROM (
        SELECT 
            T.Id AS NetworkGroup_Id, 
            T.Title AS NetworkGroup_Title, 
            T.Remark AS NetworkGroup_Remark, 
            True AS _from0
        FROM EPAGRIFFINEntities.NetworkGroups AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.PersonAccomplishment.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView23()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PersonAccomplishment
        [EPAGRIFFINModel.Store.PersonAccomplishment](T1.PersonAccomplishment_Id, T1.PersonAccomplishment_Title, T1.PersonAccomplishment_Year, T1.PersonAccomplishment_Month, T1.PersonAccomplishment_Remark, T1.PersonAccomplishment_Journal, T1.PersonAccomplishment_PersonId)
    FROM (
        SELECT 
            T.Id AS PersonAccomplishment_Id, 
            T.Title AS PersonAccomplishment_Title, 
            T.Year AS PersonAccomplishment_Year, 
            T.Month AS PersonAccomplishment_Month, 
            T.Remark AS PersonAccomplishment_Remark, 
            T.Journal AS PersonAccomplishment_Journal, 
            T.PersonId AS PersonAccomplishment_PersonId, 
            True AS _from0
        FROM EPAGRIFFINEntities.PersonAccomplishments AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.PersonAward.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView24()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PersonAward
        [EPAGRIFFINModel.Store.PersonAward](T1.PersonAward_Id, T1.PersonAward_Title, T1.PersonAward_Date, T1.PersonAward_Issuer, T1.PersonAward_Remark, T1.PersonAward_PersonId)
    FROM (
        SELECT 
            T.Id AS PersonAward_Id, 
            T.Title AS PersonAward_Title, 
            T.Date AS PersonAward_Date, 
            T.Issuer AS PersonAward_Issuer, 
            T.Remark AS PersonAward_Remark, 
            T.PersonId AS PersonAward_PersonId, 
            True AS _from0
        FROM EPAGRIFFINEntities.PersonAwards AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.PersonCertification.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView25()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PersonCertification
        [EPAGRIFFINModel.Store.PersonCertification](T1.PersonCertification_Id, T1.PersonCertification_Title, T1.PersonCertification_Authority, T1.PersonCertification_Remark, T1.PersonCertification_PersonId)
    FROM (
        SELECT 
            T.Id AS PersonCertification_Id, 
            T.Title AS PersonCertification_Title, 
            T.Authority AS PersonCertification_Authority, 
            T.Remark AS PersonCertification_Remark, 
            T.PersonId AS PersonCertification_PersonId, 
            True AS _from0
        FROM EPAGRIFFINEntities.PersonCertifications AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.PersonNetwork.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView26()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PersonNetwork
        [EPAGRIFFINModel.Store.PersonNetwork](T1.PersonNetwork_Id, T1.PersonNetwork_NetworkId, T1.PersonNetwork_PersonId, T1.PersonNetwork_Remark)
    FROM (
        SELECT 
            T.Id AS PersonNetwork_Id, 
            T.NetworkId AS PersonNetwork_NetworkId, 
            T.PersonId AS PersonNetwork_PersonId, 
            T.Remark AS PersonNetwork_Remark, 
            True AS _from0
        FROM EPAGRIFFINEntities.PersonNetworks AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.PersonPatent.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView27()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PersonPatent
        [EPAGRIFFINModel.Store.PersonPatent](T1.PersonPatent_Id, T1.PersonPatent_Title, T1.PersonPatent_Date, T1.PersonPatent_Issuer, T1.PersonPatent_Remark, T1.PersonPatent_PersonId)
    FROM (
        SELECT 
            T.Id AS PersonPatent_Id, 
            T.Title AS PersonPatent_Title, 
            T.Date AS PersonPatent_Date, 
            T.Issuer AS PersonPatent_Issuer, 
            T.Remark AS PersonPatent_Remark, 
            T.PersonId AS PersonPatent_PersonId, 
            True AS _from0
        FROM EPAGRIFFINEntities.PersonPatents AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.PersonProject.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView28()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PersonProject
        [EPAGRIFFINModel.Store.PersonProject](T1.PersonProject_Id, T1.PersonProject_Title, T1.PersonProject_Date, T1.PersonProject_Remark, T1.PersonProject_PersonId)
    FROM (
        SELECT 
            T.Id AS PersonProject_Id, 
            T.Title AS PersonProject_Title, 
            T.Date AS PersonProject_Date, 
            T.Remark AS PersonProject_Remark, 
            T.PersonId AS PersonProject_PersonId, 
            True AS _from0
        FROM EPAGRIFFINEntities.PersonProjects AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.PersonPublication.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView29()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PersonPublication
        [EPAGRIFFINModel.Store.PersonPublication](T1.PersonPublication_Id, T1.PersonPublication_Title, T1.PersonPublication_Date, T1.PersonPublication_Publisher, T1.PersonPublication_PersonId, T1.PersonPublication_Remark)
    FROM (
        SELECT 
            T.Id AS PersonPublication_Id, 
            T.Title AS PersonPublication_Title, 
            T.Date AS PersonPublication_Date, 
            T.Publisher AS PersonPublication_Publisher, 
            T.PersonId AS PersonPublication_PersonId, 
            T.Remark AS PersonPublication_Remark, 
            True AS _from0
        FROM EPAGRIFFINEntities.PersonPublications AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.Printer.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView30()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Printer
        [EPAGRIFFINModel.Store.Printer](T1.Printer_Id, T1.Printer_CompanyId, T1.Printer_Name, T1.Printer_Technology, T1.Printer_Material, T1.Printer_BuildVolume, T1.Printer_MinLayerHeight, T1.Printer_MaxLayerHeight, T1.Printer_PrintingSpeed, T1.Printer_ObjectFile, T1.Printer_Color, T1.[Printer.BuildVolume_W], T1.[Printer.BuildVolume_H], T1.[Printer.BuildVolume_D], T1.[Printer.Min_LH], T1.[Printer.Max_LH])
    FROM (
        SELECT 
            T.Id AS Printer_Id, 
            T.CompanyId AS Printer_CompanyId, 
            T.Name AS Printer_Name, 
            T.Technology AS Printer_Technology, 
            T.Material AS Printer_Material, 
            T.BuildVolume AS Printer_BuildVolume, 
            T.MinLayerHeight AS Printer_MinLayerHeight, 
            T.MaxLayerHeight AS Printer_MaxLayerHeight, 
            T.PrintingSpeed AS Printer_PrintingSpeed, 
            T.ObjectFile AS Printer_ObjectFile, 
            T.Color AS Printer_Color, 
            T.BuildVolume_W AS [Printer.BuildVolume_W], 
            T.BuildVolume_H AS [Printer.BuildVolume_H], 
            T.BuildVolume_D AS [Printer.BuildVolume_D], 
            T.Min_LH AS [Printer.Min_LH], 
            T.Max_LH AS [Printer.Max_LH], 
            True AS _from0
        FROM EPAGRIFFINEntities.Printers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.Printer2Material.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView31()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Printer2Material
        [EPAGRIFFINModel.Store.Printer2Material](T1.Printer2Material_PrinterId, T1.Printer2Material_Material, T1.Printer2Material_IsGeneral)
    FROM (
        SELECT 
            T.PrinterId AS Printer2Material_PrinterId, 
            T.Material AS Printer2Material_Material, 
            T.IsGeneral AS Printer2Material_IsGeneral, 
            True AS _from0
        FROM EPAGRIFFINEntities.Printer2Material AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.PrinterMaterial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView32()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PrinterMaterial
        [EPAGRIFFINModel.Store.PrinterMaterial](T1.PrinterMaterial_PrinterId, T1.PrinterMaterial_Material, T1.PrinterMaterial_Remark)
    FROM (
        SELECT 
            T.PrinterId AS PrinterMaterial_PrinterId, 
            T.Material AS PrinterMaterial_Material, 
            T.Remark AS PrinterMaterial_Remark, 
            True AS _from0
        FROM EPAGRIFFINEntities.PrinterMaterials AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.PrintingMaterial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView33()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PrintingMaterial
        [EPAGRIFFINModel.Store.PrintingMaterial](T1.PrintingMaterial_Title, T1.PrintingMaterial_Remrak, T1.PrintingMaterial_IsSpecific)
    FROM (
        SELECT 
            T.Title AS PrintingMaterial_Title, 
            T.Remrak AS PrintingMaterial_Remrak, 
            T.IsSpecific AS PrintingMaterial_IsSpecific, 
            True AS _from0
        FROM EPAGRIFFINEntities.PrintingMaterials AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.Review.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView34()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Review
        [EPAGRIFFINModel.Store.Review](T1.Review_Id, T1.Review_PersonId, T1.Review_Body, T1.Review_Title, T1.Review_TotalRate, T1.Review_Date, T1.Review_DateConfirm, T1.Review_ToPersonId, T1.Review_ToPostId, T1.Review_ToNetworkGroupId, T1.Review_ToReviewId)
    FROM (
        SELECT 
            T.Id AS Review_Id, 
            T.PersonId AS Review_PersonId, 
            T.Body AS Review_Body, 
            T.Title AS Review_Title, 
            T.TotalRate AS Review_TotalRate, 
            T.Date AS Review_Date, 
            T.DateConfirm AS Review_DateConfirm, 
            T.ToPersonId AS Review_ToPersonId, 
            T.ToPostId AS Review_ToPostId, 
            T.ToNetworkGroupId AS Review_ToNetworkGroupId, 
            T.ToReviewId AS Review_ToReviewId, 
            True AS _from0
        FROM EPAGRIFFINEntities.Reviews AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.UserContentActivity.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView35()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UserContentActivity
        [EPAGRIFFINModel.Store.UserContentActivity](T1.UserContentActivity_Id, T1.UserContentActivity_ReviewId, T1.UserContentActivity_Remark, T1.UserContentActivity_Date, T1.UserContentActivity_PersonId)
    FROM (
        SELECT 
            T.Id AS UserContentActivity_Id, 
            T.ReviewId AS UserContentActivity_ReviewId, 
            T.Remark AS UserContentActivity_Remark, 
            T.Date AS UserContentActivity_Date, 
            T.PersonId AS UserContentActivity_PersonId, 
            True AS _from0
        FROM EPAGRIFFINEntities.UserContentActivities AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.Company.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView36()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Company
        [EPAGRIFFINModel.Store.Company](T1.Company_Id, T1.Company_Name, T1.Company_Address, T1.Company_Phone, T1.Company_Email, T1.Company_Website, T1.Company_Url, T1.Company_DateVerified, T1.Company_Twitter, T1.Company_LinkedIn, T1.Company_ImageUrl, T1.Company_RushDelivery24, T1.Company_RushDelivery48, T1.Company_PersonId, T1.Company_DateJoin, T1.Company_ZIPCode, T1.Company_City, T1.Company_State, T1.Company_CountryId, T1.Company_Network, T1.Company_UserId, T1.Company_Remark)
    FROM (
        SELECT 
            T.Id AS Company_Id, 
            T.Name AS Company_Name, 
            T.Address AS Company_Address, 
            T.Phone AS Company_Phone, 
            T.Email AS Company_Email, 
            T.Website AS Company_Website, 
            T.Url AS Company_Url, 
            T.DateVerified AS Company_DateVerified, 
            T.Twitter AS Company_Twitter, 
            T.LinkedIn AS Company_LinkedIn, 
            T.ImageUrl AS Company_ImageUrl, 
            T.RushDelivery24 AS Company_RushDelivery24, 
            T.RushDelivery48 AS Company_RushDelivery48, 
            T.PersonId AS Company_PersonId, 
            T.DateJoin AS Company_DateJoin, 
            T.ZIPCode AS Company_ZIPCode, 
            T.City AS Company_City, 
            T.State AS Company_State, 
            T.CountryId AS Company_CountryId, 
            T.Network AS Company_Network, 
            T.UserId AS Company_UserId, 
            T.Remark AS Company_Remark, 
            True AS _from0
        FROM EPAGRIFFINEntities.Companies AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.Person.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView37()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Person
        [EPAGRIFFINModel.Store.Person](T1.Person_Id, T1.Person_DateCreate, T1.Person_SexId, T1.Person_FirstName, T1.Person_LastName, T1.Person_DateBirth, T1.Person_Email, T1.Person_Mobile, T1.Person_Address, T1.Person_IsActive, T1.Person_IsDeleted, T1.Person_Remark, T1.Person_Nickname, T1.Person_IDNo, T1.Person_UserId, T1.Person_ImageUrl, T1.Person_CountryId, T1.Person_ZIPCode, T1.Person_State, T1.Person_City, T1.Person_Company, T1.Person_University, T1.Person_Website, T1.Person_Twitter, T1.Person_LinkedIn, T1.Person_Headline, T1.Person_DegreeId, T1.Person_PositionId, T1.Person_DateJoin, T1.Person_FieldOfStudyId, T1.Person_TempId, T1.Person_Education2, T1.Person_Location2, T1.Person_Position2, T1.Person_Degree)
    FROM (
        SELECT 
            T.Id AS Person_Id, 
            T.DateCreate AS Person_DateCreate, 
            T.SexId AS Person_SexId, 
            T.FirstName AS Person_FirstName, 
            T.LastName AS Person_LastName, 
            T.DateBirth AS Person_DateBirth, 
            T.Email AS Person_Email, 
            T.Mobile AS Person_Mobile, 
            T.Address AS Person_Address, 
            T.IsActive AS Person_IsActive, 
            T.IsDeleted AS Person_IsDeleted, 
            T.Remark AS Person_Remark, 
            T.Nickname AS Person_Nickname, 
            T.IDNo AS Person_IDNo, 
            T.UserId AS Person_UserId, 
            T.ImageUrl AS Person_ImageUrl, 
            T.CountryId AS Person_CountryId, 
            T.ZIPCode AS Person_ZIPCode, 
            T.State AS Person_State, 
            T.City AS Person_City, 
            T.Company AS Person_Company, 
            T.University AS Person_University, 
            T.Website AS Person_Website, 
            T.Twitter AS Person_Twitter, 
            T.LinkedIn AS Person_LinkedIn, 
            T.Headline AS Person_Headline, 
            T.DegreeId AS Person_DegreeId, 
            T.PositionId AS Person_PositionId, 
            T.DateJoin AS Person_DateJoin, 
            T.FieldOfStudyId AS Person_FieldOfStudyId, 
            T.TempId AS Person_TempId, 
            T.Education2 AS Person_Education2, 
            T.Location2 AS Person_Location2, 
            T.Position2 AS Person_Position2, 
            T.Degree AS Person_Degree, 
            True AS _from0
        FROM EPAGRIFFINEntities.People AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.CompanyRates.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView38()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CompanyRates
        [EPAGRIFFINModel.CompanyRate](T1.CompanyRate_Id, T1.CompanyRate_Rate, T1.CompanyRate_Date, T1.CompanyRate_Remark, T1.CompanyRate_PersonId, T1.CompanyRate_CompanyId)
    FROM (
        SELECT 
            T.Id AS CompanyRate_Id, 
            T.Rate AS CompanyRate_Rate, 
            T.Date AS CompanyRate_Date, 
            T.Remark AS CompanyRate_Remark, 
            T.PersonId AS CompanyRate_PersonId, 
            T.CompanyId AS CompanyRate_CompanyId, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.CompanyRate AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.CompanySliders.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView39()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CompanySliders
        [EPAGRIFFINModel.CompanySlider](T1.CompanySlider_Id, T1.CompanySlider_Url, T1.CompanySlider_TypeID, T1.CompanySlider_CompanyId, T1.CompanySlider_Remark)
    FROM (
        SELECT 
            T.Id AS CompanySlider_Id, 
            T.Url AS CompanySlider_Url, 
            T.TypeID AS CompanySlider_TypeID, 
            T.CompanyId AS CompanySlider_CompanyId, 
            T.Remark AS CompanySlider_Remark, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.CompanySlider AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.NetworkGroups.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView40()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing NetworkGroups
        [EPAGRIFFINModel.NetworkGroup](T1.NetworkGroup_Id, T1.NetworkGroup_Title, T1.NetworkGroup_Remark)
    FROM (
        SELECT 
            T.Id AS NetworkGroup_Id, 
            T.Title AS NetworkGroup_Title, 
            T.Remark AS NetworkGroup_Remark, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.NetworkGroup AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.PersonAccomplishments.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView41()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PersonAccomplishments
        [EPAGRIFFINModel.PersonAccomplishment](T1.PersonAccomplishment_Id, T1.PersonAccomplishment_Title, T1.PersonAccomplishment_Year, T1.PersonAccomplishment_Month, T1.PersonAccomplishment_Remark, T1.PersonAccomplishment_Journal, T1.PersonAccomplishment_PersonId)
    FROM (
        SELECT 
            T.Id AS PersonAccomplishment_Id, 
            T.Title AS PersonAccomplishment_Title, 
            T.Year AS PersonAccomplishment_Year, 
            T.Month AS PersonAccomplishment_Month, 
            T.Remark AS PersonAccomplishment_Remark, 
            T.Journal AS PersonAccomplishment_Journal, 
            T.PersonId AS PersonAccomplishment_PersonId, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.PersonAccomplishment AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.PersonAwards.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView42()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PersonAwards
        [EPAGRIFFINModel.PersonAward](T1.PersonAward_Id, T1.PersonAward_Title, T1.PersonAward_Date, T1.PersonAward_Issuer, T1.PersonAward_Remark, T1.PersonAward_PersonId)
    FROM (
        SELECT 
            T.Id AS PersonAward_Id, 
            T.Title AS PersonAward_Title, 
            T.Date AS PersonAward_Date, 
            T.Issuer AS PersonAward_Issuer, 
            T.Remark AS PersonAward_Remark, 
            T.PersonId AS PersonAward_PersonId, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.PersonAward AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.PersonCertifications.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView43()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PersonCertifications
        [EPAGRIFFINModel.PersonCertification](T1.PersonCertification_Id, T1.PersonCertification_Title, T1.PersonCertification_Authority, T1.PersonCertification_Remark, T1.PersonCertification_PersonId)
    FROM (
        SELECT 
            T.Id AS PersonCertification_Id, 
            T.Title AS PersonCertification_Title, 
            T.Authority AS PersonCertification_Authority, 
            T.Remark AS PersonCertification_Remark, 
            T.PersonId AS PersonCertification_PersonId, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.PersonCertification AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.PersonNetworks.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView44()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PersonNetworks
        [EPAGRIFFINModel.PersonNetwork](T1.PersonNetwork_Id, T1.PersonNetwork_NetworkId, T1.PersonNetwork_PersonId, T1.PersonNetwork_Remark)
    FROM (
        SELECT 
            T.Id AS PersonNetwork_Id, 
            T.NetworkId AS PersonNetwork_NetworkId, 
            T.PersonId AS PersonNetwork_PersonId, 
            T.Remark AS PersonNetwork_Remark, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.PersonNetwork AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.PersonPatents.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView45()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PersonPatents
        [EPAGRIFFINModel.PersonPatent](T1.PersonPatent_Id, T1.PersonPatent_Title, T1.PersonPatent_Date, T1.PersonPatent_Issuer, T1.PersonPatent_Remark, T1.PersonPatent_PersonId)
    FROM (
        SELECT 
            T.Id AS PersonPatent_Id, 
            T.Title AS PersonPatent_Title, 
            T.Date AS PersonPatent_Date, 
            T.Issuer AS PersonPatent_Issuer, 
            T.Remark AS PersonPatent_Remark, 
            T.PersonId AS PersonPatent_PersonId, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.PersonPatent AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.PersonProjects.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView46()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PersonProjects
        [EPAGRIFFINModel.PersonProject](T1.PersonProject_Id, T1.PersonProject_Title, T1.PersonProject_Date, T1.PersonProject_Remark, T1.PersonProject_PersonId)
    FROM (
        SELECT 
            T.Id AS PersonProject_Id, 
            T.Title AS PersonProject_Title, 
            T.Date AS PersonProject_Date, 
            T.Remark AS PersonProject_Remark, 
            T.PersonId AS PersonProject_PersonId, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.PersonProject AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.PersonPublications.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView47()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PersonPublications
        [EPAGRIFFINModel.PersonPublication](T1.PersonPublication_Id, T1.PersonPublication_Title, T1.PersonPublication_Date, T1.PersonPublication_Publisher, T1.PersonPublication_PersonId, T1.PersonPublication_Remark)
    FROM (
        SELECT 
            T.Id AS PersonPublication_Id, 
            T.Title AS PersonPublication_Title, 
            T.Date AS PersonPublication_Date, 
            T.Publisher AS PersonPublication_Publisher, 
            T.PersonId AS PersonPublication_PersonId, 
            T.Remark AS PersonPublication_Remark, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.PersonPublication AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.Printers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView48()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Printers
        [EPAGRIFFINModel.Printer](T1.Printer_Id, T1.Printer_CompanyId, T1.Printer_Name, T1.Printer_Technology, T1.Printer_Material, T1.Printer_BuildVolume, T1.Printer_MinLayerHeight, T1.Printer_MaxLayerHeight, T1.Printer_PrintingSpeed, T1.Printer_ObjectFile, T1.Printer_Color, T1.[Printer.BuildVolume_W], T1.[Printer.BuildVolume_H], T1.[Printer.BuildVolume_D], T1.[Printer.Min_LH], T1.[Printer.Max_LH])
    FROM (
        SELECT 
            T.Id AS Printer_Id, 
            T.CompanyId AS Printer_CompanyId, 
            T.Name AS Printer_Name, 
            T.Technology AS Printer_Technology, 
            T.Material AS Printer_Material, 
            T.BuildVolume AS Printer_BuildVolume, 
            T.MinLayerHeight AS Printer_MinLayerHeight, 
            T.MaxLayerHeight AS Printer_MaxLayerHeight, 
            T.PrintingSpeed AS Printer_PrintingSpeed, 
            T.ObjectFile AS Printer_ObjectFile, 
            T.Color AS Printer_Color, 
            T.BuildVolume_W AS [Printer.BuildVolume_W], 
            T.BuildVolume_H AS [Printer.BuildVolume_H], 
            T.BuildVolume_D AS [Printer.BuildVolume_D], 
            T.Min_LH AS [Printer.Min_LH], 
            T.Max_LH AS [Printer.Max_LH], 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.Printer AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.Printer2Material.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView49()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Printer2Material
        [EPAGRIFFINModel.Printer2Material](T1.Printer2Material_PrinterId, T1.Printer2Material_Material, T1.Printer2Material_IsGeneral)
    FROM (
        SELECT 
            T.PrinterId AS Printer2Material_PrinterId, 
            T.Material AS Printer2Material_Material, 
            T.IsGeneral AS Printer2Material_IsGeneral, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.Printer2Material AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.PrinterMaterials.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView50()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PrinterMaterials
        [EPAGRIFFINModel.PrinterMaterial](T1.PrinterMaterial_PrinterId, T1.PrinterMaterial_Material, T1.PrinterMaterial_Remark)
    FROM (
        SELECT 
            T.PrinterId AS PrinterMaterial_PrinterId, 
            T.Material AS PrinterMaterial_Material, 
            T.Remark AS PrinterMaterial_Remark, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.PrinterMaterial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.PrintingMaterials.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView51()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PrintingMaterials
        [EPAGRIFFINModel.PrintingMaterial](T1.PrintingMaterial_Title, T1.PrintingMaterial_Remrak, T1.PrintingMaterial_IsSpecific)
    FROM (
        SELECT 
            T.Title AS PrintingMaterial_Title, 
            T.Remrak AS PrintingMaterial_Remrak, 
            T.IsSpecific AS PrintingMaterial_IsSpecific, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.PrintingMaterial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.Reviews.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView52()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Reviews
        [EPAGRIFFINModel.Review](T1.Review_Id, T1.Review_PersonId, T1.Review_Body, T1.Review_Title, T1.Review_TotalRate, T1.Review_Date, T1.Review_DateConfirm, T1.Review_ToPersonId, T1.Review_ToPostId, T1.Review_ToNetworkGroupId, T1.Review_ToReviewId)
    FROM (
        SELECT 
            T.Id AS Review_Id, 
            T.PersonId AS Review_PersonId, 
            T.Body AS Review_Body, 
            T.Title AS Review_Title, 
            T.TotalRate AS Review_TotalRate, 
            T.Date AS Review_Date, 
            T.DateConfirm AS Review_DateConfirm, 
            T.ToPersonId AS Review_ToPersonId, 
            T.ToPostId AS Review_ToPostId, 
            T.ToNetworkGroupId AS Review_ToNetworkGroupId, 
            T.ToReviewId AS Review_ToReviewId, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.Review AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.UserContentActivities.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView53()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UserContentActivities
        [EPAGRIFFINModel.UserContentActivity](T1.UserContentActivity_Id, T1.UserContentActivity_ReviewId, T1.UserContentActivity_Remark, T1.UserContentActivity_Date, T1.UserContentActivity_PersonId)
    FROM (
        SELECT 
            T.Id AS UserContentActivity_Id, 
            T.ReviewId AS UserContentActivity_ReviewId, 
            T.Remark AS UserContentActivity_Remark, 
            T.Date AS UserContentActivity_Date, 
            T.PersonId AS UserContentActivity_PersonId, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.UserContentActivity AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.Companies.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView54()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Companies
        [EPAGRIFFINModel.Company](T1.Company_Id, T1.Company_Name, T1.Company_Address, T1.Company_Phone, T1.Company_Email, T1.Company_Website, T1.Company_Url, T1.Company_DateVerified, T1.Company_Twitter, T1.Company_LinkedIn, T1.Company_ImageUrl, T1.Company_RushDelivery24, T1.Company_RushDelivery48, T1.Company_PersonId, T1.Company_DateJoin, T1.Company_ZIPCode, T1.Company_City, T1.Company_State, T1.Company_CountryId, T1.Company_Network, T1.Company_UserId, T1.Company_Remark)
    FROM (
        SELECT 
            T.Id AS Company_Id, 
            T.Name AS Company_Name, 
            T.Address AS Company_Address, 
            T.Phone AS Company_Phone, 
            T.Email AS Company_Email, 
            T.Website AS Company_Website, 
            T.Url AS Company_Url, 
            T.DateVerified AS Company_DateVerified, 
            T.Twitter AS Company_Twitter, 
            T.LinkedIn AS Company_LinkedIn, 
            T.ImageUrl AS Company_ImageUrl, 
            T.RushDelivery24 AS Company_RushDelivery24, 
            T.RushDelivery48 AS Company_RushDelivery48, 
            T.PersonId AS Company_PersonId, 
            T.DateJoin AS Company_DateJoin, 
            T.ZIPCode AS Company_ZIPCode, 
            T.City AS Company_City, 
            T.State AS Company_State, 
            T.CountryId AS Company_CountryId, 
            T.Network AS Company_Network, 
            T.UserId AS Company_UserId, 
            T.Remark AS Company_Remark, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.Company AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.People.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView55()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing People
        [EPAGRIFFINModel.Person](T1.Person_Id, T1.Person_DateCreate, T1.Person_SexId, T1.Person_FirstName, T1.Person_LastName, T1.Person_DateBirth, T1.Person_Email, T1.Person_Mobile, T1.Person_Address, T1.Person_IsActive, T1.Person_IsDeleted, T1.Person_Remark, T1.Person_Nickname, T1.Person_IDNo, T1.Person_UserId, T1.Person_ImageUrl, T1.Person_CountryId, T1.Person_ZIPCode, T1.Person_State, T1.Person_City, T1.Person_Company, T1.Person_University, T1.Person_Website, T1.Person_Twitter, T1.Person_LinkedIn, T1.Person_Headline, T1.Person_DegreeId, T1.Person_PositionId, T1.Person_DateJoin, T1.Person_FieldOfStudyId, T1.Person_TempId, T1.Person_Education2, T1.Person_Location2, T1.Person_Position2, T1.Person_Degree)
    FROM (
        SELECT 
            T.Id AS Person_Id, 
            T.DateCreate AS Person_DateCreate, 
            T.SexId AS Person_SexId, 
            T.FirstName AS Person_FirstName, 
            T.LastName AS Person_LastName, 
            T.DateBirth AS Person_DateBirth, 
            T.Email AS Person_Email, 
            T.Mobile AS Person_Mobile, 
            T.Address AS Person_Address, 
            T.IsActive AS Person_IsActive, 
            T.IsDeleted AS Person_IsDeleted, 
            T.Remark AS Person_Remark, 
            T.Nickname AS Person_Nickname, 
            T.IDNo AS Person_IDNo, 
            T.UserId AS Person_UserId, 
            T.ImageUrl AS Person_ImageUrl, 
            T.CountryId AS Person_CountryId, 
            T.ZIPCode AS Person_ZIPCode, 
            T.State AS Person_State, 
            T.City AS Person_City, 
            T.Company AS Person_Company, 
            T.University AS Person_University, 
            T.Website AS Person_Website, 
            T.Twitter AS Person_Twitter, 
            T.LinkedIn AS Person_LinkedIn, 
            T.Headline AS Person_Headline, 
            T.DegreeId AS Person_DegreeId, 
            T.PositionId AS Person_PositionId, 
            T.DateJoin AS Person_DateJoin, 
            T.FieldOfStudyId AS Person_FieldOfStudyId, 
            T.TempId AS Person_TempId, 
            T.Education2 AS Person_Education2, 
            T.Location2 AS Person_Location2, 
            T.Position2 AS Person_Position2, 
            T.Degree AS Person_Degree, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.Person AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.Country.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView56()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Country
        [EPAGRIFFINModel.Store.Country](T1.Country_Id, T1.Country_SortName, T1.Country_Name, T1.Country_PhoneCode)
    FROM (
        SELECT 
            T.Id AS Country_Id, 
            T.SortName AS Country_SortName, 
            T.Name AS Country_Name, 
            T.PhoneCode AS Country_PhoneCode, 
            True AS _from0
        FROM EPAGRIFFINEntities.Countries AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.Countries.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView57()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Countries
        [EPAGRIFFINModel.Country](T1.Country_Id, T1.Country_SortName, T1.Country_Name, T1.Country_PhoneCode)
    FROM (
        SELECT 
            T.Id AS Country_Id, 
            T.SortName AS Country_SortName, 
            T.Name AS Country_Name, 
            T.PhoneCode AS Country_PhoneCode, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.Country AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.Manufacturer.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView58()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Manufacturer
        [EPAGRIFFINModel.Store.Manufacturer](T1.Manufacturer_Id, T1.Manufacturer_Name, T1.Manufacturer_Website)
    FROM (
        SELECT 
            T.Id AS Manufacturer_Id, 
            T.Name AS Manufacturer_Name, 
            T.Website AS Manufacturer_Website, 
            True AS _from0
        FROM EPAGRIFFINEntities.Manufacturers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.Manufacturers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView59()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Manufacturers
        [EPAGRIFFINModel.Manufacturer](T1.Manufacturer_Id, T1.Manufacturer_Name, T1.Manufacturer_Website)
    FROM (
        SELECT 
            T.Id AS Manufacturer_Id, 
            T.Name AS Manufacturer_Name, 
            T.Website AS Manufacturer_Website, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.Manufacturer AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.Option.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView60()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Option
        [EPAGRIFFINModel.Store.Option](T1.Option_Id, T1.Option_Title, T1.Option_ParentId, T1.Option_IsSystem, T1.Option_OrderIndex, T1.Option_CreatorId, T1.Option_Prop1)
    FROM (
        SELECT 
            T.Id AS Option_Id, 
            T.Title AS Option_Title, 
            T.ParentId AS Option_ParentId, 
            T.IsSystem AS Option_IsSystem, 
            T.OrderIndex AS Option_OrderIndex, 
            T.CreatorId AS Option_CreatorId, 
            T.Prop1 AS Option_Prop1, 
            True AS _from0
        FROM EPAGRIFFINEntities.Options AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.Printer2Optic.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView61()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Printer2Optic
        [EPAGRIFFINModel.Store.Printer2Optic](T1.Printer2Optic_PrinterId, T1.Printer2Optic_OpticId, T1.Printer2Optic_Remark)
    FROM (
        SELECT 
            T.PrinterId AS Printer2Optic_PrinterId, 
            T.OpticId AS Printer2Optic_OpticId, 
            T.Remark AS Printer2Optic_Remark, 
            True AS _from0
        FROM EPAGRIFFINEntities.Printer2Optic AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.PrinterTechnology.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView62()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PrinterTechnology
        [EPAGRIFFINModel.Store.PrinterTechnology](T1.PrinterTechnology_PrinterId, T1.PrinterTechnology_Remark, T1.PrinterTechnology_TechnologyId, T1.PrinterTechnology_Technology)
    FROM (
        SELECT 
            T.PrinterId AS PrinterTechnology_PrinterId, 
            T.Remark AS PrinterTechnology_Remark, 
            T.TechnologyId AS PrinterTechnology_TechnologyId, 
            T.Technology AS PrinterTechnology_Technology, 
            True AS _from0
        FROM EPAGRIFFINEntities.PrinterTechnologies AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.Options.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView63()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Options
        [EPAGRIFFINModel.Option](T1.Option_Id, T1.Option_Title, T1.Option_ParentId, T1.Option_IsSystem, T1.Option_OrderIndex, T1.Option_CreatorId, T1.Option_Prop1)
    FROM (
        SELECT 
            T.Id AS Option_Id, 
            T.Title AS Option_Title, 
            T.ParentId AS Option_ParentId, 
            T.IsSystem AS Option_IsSystem, 
            T.OrderIndex AS Option_OrderIndex, 
            T.CreatorId AS Option_CreatorId, 
            T.Prop1 AS Option_Prop1, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.Option AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.Printer2Optic.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView64()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Printer2Optic
        [EPAGRIFFINModel.Printer2Optic](T1.Printer2Optic_PrinterId, T1.Printer2Optic_OpticId, T1.Printer2Optic_Remark)
    FROM (
        SELECT 
            T.PrinterId AS Printer2Optic_PrinterId, 
            T.OpticId AS Printer2Optic_OpticId, 
            T.Remark AS Printer2Optic_Remark, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.Printer2Optic AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.PrinterTechnologies.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView65()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PrinterTechnologies
        [EPAGRIFFINModel.PrinterTechnology](T1.PrinterTechnology_PrinterId, T1.PrinterTechnology_Remark, T1.PrinterTechnology_TechnologyId, T1.PrinterTechnology_Technology)
    FROM (
        SELECT 
            T.PrinterId AS PrinterTechnology_PrinterId, 
            T.Remark AS PrinterTechnology_Remark, 
            T.TechnologyId AS PrinterTechnology_TechnologyId, 
            T.Technology AS PrinterTechnology_Technology, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.PrinterTechnology AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.PrinterModel.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView66()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PrinterModel
        [EPAGRIFFINModel.Store.PrinterModel](T1.PrinterModel_Id, T1.PrinterModel_ManId, T1.PrinterModel_Name)
    FROM (
        SELECT 
            T.Id AS PrinterModel_Id, 
            T.ManId AS PrinterModel_ManId, 
            T.Name AS PrinterModel_Name, 
            True AS _from0
        FROM EPAGRIFFINEntities.PrinterModels AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.PrinterModels.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView67()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing PrinterModels
        [EPAGRIFFINModel.PrinterModel](T1.PrinterModel_Id, T1.PrinterModel_ManId, T1.PrinterModel_Name)
    FROM (
        SELECT 
            T.Id AS PrinterModel_Id, 
            T.ManId AS PrinterModel_ManId, 
            T.Name AS PrinterModel_Name, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.PrinterModel AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.RefreshToken.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView68()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing RefreshToken
        [EPAGRIFFINModel.Store.RefreshToken](T1.RefreshToken_Id, T1.RefreshToken_Subject, T1.RefreshToken_ClientId, T1.RefreshToken_IssuedUtc, T1.RefreshToken_ExpiresUtc, T1.RefreshToken_ProtectedTicket)
    FROM (
        SELECT 
            T.Id AS RefreshToken_Id, 
            T.Subject AS RefreshToken_Subject, 
            T.ClientId AS RefreshToken_ClientId, 
            T.IssuedUtc AS RefreshToken_IssuedUtc, 
            T.ExpiresUtc AS RefreshToken_ExpiresUtc, 
            T.ProtectedTicket AS RefreshToken_ProtectedTicket, 
            True AS _from0
        FROM EPAGRIFFINEntities.RefreshTokens AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.RefreshTokens.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView69()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing RefreshTokens
        [EPAGRIFFINModel.RefreshToken](T1.RefreshToken_Id, T1.RefreshToken_Subject, T1.RefreshToken_ClientId, T1.RefreshToken_IssuedUtc, T1.RefreshToken_ExpiresUtc, T1.RefreshToken_ProtectedTicket)
    FROM (
        SELECT 
            T.Id AS RefreshToken_Id, 
            T.Subject AS RefreshToken_Subject, 
            T.ClientId AS RefreshToken_ClientId, 
            T.IssuedUtc AS RefreshToken_IssuedUtc, 
            T.ExpiresUtc AS RefreshToken_ExpiresUtc, 
            T.ProtectedTicket AS RefreshToken_ProtectedTicket, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.RefreshToken AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.ReviewRate.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView70()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ReviewRate
        [EPAGRIFFINModel.Store.ReviewRate](T1.ReviewRate_Id, T1.ReviewRate_ReviewId, T1.ReviewRate_Rate, T1.ReviewRate_Date, T1.ReviewRate_Remark, T1.ReviewRate_PersonId)
    FROM (
        SELECT 
            T.Id AS ReviewRate_Id, 
            T.ReviewId AS ReviewRate_ReviewId, 
            T.Rate AS ReviewRate_Rate, 
            T.Date AS ReviewRate_Date, 
            T.Remark AS ReviewRate_Remark, 
            T.PersonId AS ReviewRate_PersonId, 
            True AS _from0
        FROM EPAGRIFFINEntities.ReviewRates AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.ReviewRates.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView71()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ReviewRates
        [EPAGRIFFINModel.ReviewRate](T1.ReviewRate_Id, T1.ReviewRate_ReviewId, T1.ReviewRate_Rate, T1.ReviewRate_Date, T1.ReviewRate_Remark, T1.ReviewRate_PersonId)
    FROM (
        SELECT 
            T.Id AS ReviewRate_Id, 
            T.ReviewId AS ReviewRate_ReviewId, 
            T.Rate AS ReviewRate_Rate, 
            T.Date AS ReviewRate_Date, 
            T.Remark AS ReviewRate_Remark, 
            T.PersonId AS ReviewRate_PersonId, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.ReviewRate AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.State.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView72()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing State
        [EPAGRIFFINModel.Store.State](T1.State_Id, T1.State_Name, T1.State_CountryId)
    FROM (
        SELECT 
            T.Id AS State_Id, 
            T.Name AS State_Name, 
            T.CountryId AS State_CountryId, 
            True AS _from0
        FROM EPAGRIFFINEntities.States AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.States.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView73()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing States
        [EPAGRIFFINModel.State](T1.State_Id, T1.State_Name, T1.State_CountryId)
    FROM (
        SELECT 
            T.Id AS State_Id, 
            T.Name AS State_Name, 
            T.CountryId AS State_CountryId, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.State AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.ViewAward.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView74()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewAward
        [EPAGRIFFINModel.Store.ViewAward](T1.ViewAward_Id, T1.ViewAward_Title, T1.ViewAward_Date, T1.ViewAward_DateStr, T1.ViewAward_Issuer, T1.ViewAward_Remark, T1.ViewAward_PersonId)
    FROM (
        SELECT 
            T.Id AS ViewAward_Id, 
            T.Title AS ViewAward_Title, 
            T.Date AS ViewAward_Date, 
            T.DateStr AS ViewAward_DateStr, 
            T.Issuer AS ViewAward_Issuer, 
            T.Remark AS ViewAward_Remark, 
            T.PersonId AS ViewAward_PersonId, 
            True AS _from0
        FROM EPAGRIFFINEntities.ViewAwards AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.ViewAwards.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView75()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewAwards
        [EPAGRIFFINModel.ViewAward](T1.ViewAward_Id, T1.ViewAward_Title, T1.ViewAward_Date, T1.ViewAward_DateStr, T1.ViewAward_Issuer, T1.ViewAward_Remark, T1.ViewAward_PersonId)
    FROM (
        SELECT 
            T.Id AS ViewAward_Id, 
            T.Title AS ViewAward_Title, 
            T.Date AS ViewAward_Date, 
            T.DateStr AS ViewAward_DateStr, 
            T.Issuer AS ViewAward_Issuer, 
            T.Remark AS ViewAward_Remark, 
            T.PersonId AS ViewAward_PersonId, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.ViewAward AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.ViewCertification.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView76()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewCertification
        [EPAGRIFFINModel.Store.ViewCertification](T1.ViewCertification_Id, T1.ViewCertification_Title, T1.ViewCertification_Authority, T1.ViewCertification_Remark, T1.ViewCertification_PersonId)
    FROM (
        SELECT 
            T.Id AS ViewCertification_Id, 
            T.Title AS ViewCertification_Title, 
            T.Authority AS ViewCertification_Authority, 
            T.Remark AS ViewCertification_Remark, 
            T.PersonId AS ViewCertification_PersonId, 
            True AS _from0
        FROM EPAGRIFFINEntities.ViewCertifications AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.ViewCertifications.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView77()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewCertifications
        [EPAGRIFFINModel.ViewCertification](T1.ViewCertification_Id, T1.ViewCertification_Title, T1.ViewCertification_Authority, T1.ViewCertification_Remark, T1.ViewCertification_PersonId)
    FROM (
        SELECT 
            T.Id AS ViewCertification_Id, 
            T.Title AS ViewCertification_Title, 
            T.Authority AS ViewCertification_Authority, 
            T.Remark AS ViewCertification_Remark, 
            T.PersonId AS ViewCertification_PersonId, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.ViewCertification AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.ViewCountry.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView78()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewCountry
        [EPAGRIFFINModel.Store.ViewCountry](T1.ViewCountry_Id, T1.ViewCountry_SortName, T1.ViewCountry_Name)
    FROM (
        SELECT 
            T.Id AS ViewCountry_Id, 
            T.SortName AS ViewCountry_SortName, 
            T.Name AS ViewCountry_Name, 
            True AS _from0
        FROM EPAGRIFFINEntities.ViewCountries AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.ViewCountries.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView79()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewCountries
        [EPAGRIFFINModel.ViewCountry](T1.ViewCountry_Id, T1.ViewCountry_SortName, T1.ViewCountry_Name)
    FROM (
        SELECT 
            T.Id AS ViewCountry_Id, 
            T.SortName AS ViewCountry_SortName, 
            T.Name AS ViewCountry_Name, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.ViewCountry AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.ViewOption.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView80()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewOption
        [EPAGRIFFINModel.Store.ViewOption](T1.ViewOption_Id, T1.ViewOption_Title, T1.ViewOption_ParentId, T1.ViewOption_OrderIndex, T1.ViewOption_IsSystem)
    FROM (
        SELECT 
            T.Id AS ViewOption_Id, 
            T.Title AS ViewOption_Title, 
            T.ParentId AS ViewOption_ParentId, 
            T.OrderIndex AS ViewOption_OrderIndex, 
            T.IsSystem AS ViewOption_IsSystem, 
            True AS _from0
        FROM EPAGRIFFINEntities.ViewOptions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.ViewOptions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView81()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewOptions
        [EPAGRIFFINModel.ViewOption](T1.ViewOption_Id, T1.ViewOption_Title, T1.ViewOption_ParentId, T1.ViewOption_OrderIndex, T1.ViewOption_IsSystem)
    FROM (
        SELECT 
            T.Id AS ViewOption_Id, 
            T.Title AS ViewOption_Title, 
            T.ParentId AS ViewOption_ParentId, 
            T.OrderIndex AS ViewOption_OrderIndex, 
            T.IsSystem AS ViewOption_IsSystem, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.ViewOption AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.ViewPersonNetwork.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView82()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewPersonNetwork
        [EPAGRIFFINModel.Store.ViewPersonNetwork](T1.ViewPersonNetwork_Network, T1.ViewPersonNetwork_Id, T1.ViewPersonNetwork_NetworkId, T1.ViewPersonNetwork_PersonId, T1.ViewPersonNetwork_Remark)
    FROM (
        SELECT 
            T.Network AS ViewPersonNetwork_Network, 
            T.Id AS ViewPersonNetwork_Id, 
            T.NetworkId AS ViewPersonNetwork_NetworkId, 
            T.PersonId AS ViewPersonNetwork_PersonId, 
            T.Remark AS ViewPersonNetwork_Remark, 
            True AS _from0
        FROM EPAGRIFFINEntities.ViewPersonNetworks AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.ViewPersonNetworks.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView83()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewPersonNetworks
        [EPAGRIFFINModel.ViewPersonNetwork](T1.ViewPersonNetwork_Network, T1.ViewPersonNetwork_Id, T1.ViewPersonNetwork_NetworkId, T1.ViewPersonNetwork_PersonId, T1.ViewPersonNetwork_Remark)
    FROM (
        SELECT 
            T.Network AS ViewPersonNetwork_Network, 
            T.Id AS ViewPersonNetwork_Id, 
            T.NetworkId AS ViewPersonNetwork_NetworkId, 
            T.PersonId AS ViewPersonNetwork_PersonId, 
            T.Remark AS ViewPersonNetwork_Remark, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.ViewPersonNetwork AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.ViewPersonPatent.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView84()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewPersonPatent
        [EPAGRIFFINModel.Store.ViewPersonPatent](T1.ViewPersonPatent_Id, T1.ViewPersonPatent_Title, T1.ViewPersonPatent_Date, T1.ViewPersonPatent_DateStr, T1.ViewPersonPatent_Issuer, T1.ViewPersonPatent_Remark, T1.ViewPersonPatent_PersonId)
    FROM (
        SELECT 
            T.Id AS ViewPersonPatent_Id, 
            T.Title AS ViewPersonPatent_Title, 
            T.Date AS ViewPersonPatent_Date, 
            T.DateStr AS ViewPersonPatent_DateStr, 
            T.Issuer AS ViewPersonPatent_Issuer, 
            T.Remark AS ViewPersonPatent_Remark, 
            T.PersonId AS ViewPersonPatent_PersonId, 
            True AS _from0
        FROM EPAGRIFFINEntities.ViewPersonPatents AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.ViewPersonPatents.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView85()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewPersonPatents
        [EPAGRIFFINModel.ViewPersonPatent](T1.ViewPersonPatent_Id, T1.ViewPersonPatent_Title, T1.ViewPersonPatent_Date, T1.ViewPersonPatent_DateStr, T1.ViewPersonPatent_Issuer, T1.ViewPersonPatent_Remark, T1.ViewPersonPatent_PersonId)
    FROM (
        SELECT 
            T.Id AS ViewPersonPatent_Id, 
            T.Title AS ViewPersonPatent_Title, 
            T.Date AS ViewPersonPatent_Date, 
            T.DateStr AS ViewPersonPatent_DateStr, 
            T.Issuer AS ViewPersonPatent_Issuer, 
            T.Remark AS ViewPersonPatent_Remark, 
            T.PersonId AS ViewPersonPatent_PersonId, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.ViewPersonPatent AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.ViewPersonPublication.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView86()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewPersonPublication
        [EPAGRIFFINModel.Store.ViewPersonPublication](T1.ViewPersonPublication_Id, T1.ViewPersonPublication_Title, T1.ViewPersonPublication_Date, T1.ViewPersonPublication_DateStr, T1.ViewPersonPublication_Publisher, T1.ViewPersonPublication_PersonId, T1.ViewPersonPublication_Remark)
    FROM (
        SELECT 
            T.Id AS ViewPersonPublication_Id, 
            T.Title AS ViewPersonPublication_Title, 
            T.Date AS ViewPersonPublication_Date, 
            T.DateStr AS ViewPersonPublication_DateStr, 
            T.Publisher AS ViewPersonPublication_Publisher, 
            T.PersonId AS ViewPersonPublication_PersonId, 
            T.Remark AS ViewPersonPublication_Remark, 
            True AS _from0
        FROM EPAGRIFFINEntities.ViewPersonPublications AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.ViewPersonPublications.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView87()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewPersonPublications
        [EPAGRIFFINModel.ViewPersonPublication](T1.ViewPersonPublication_Id, T1.ViewPersonPublication_Title, T1.ViewPersonPublication_Date, T1.ViewPersonPublication_DateStr, T1.ViewPersonPublication_Publisher, T1.ViewPersonPublication_PersonId, T1.ViewPersonPublication_Remark)
    FROM (
        SELECT 
            T.Id AS ViewPersonPublication_Id, 
            T.Title AS ViewPersonPublication_Title, 
            T.Date AS ViewPersonPublication_Date, 
            T.DateStr AS ViewPersonPublication_DateStr, 
            T.Publisher AS ViewPersonPublication_Publisher, 
            T.PersonId AS ViewPersonPublication_PersonId, 
            T.Remark AS ViewPersonPublication_Remark, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.ViewPersonPublication AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.ViewPersonReview.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView88()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewPersonReview
        [EPAGRIFFINModel.Store.ViewPersonReview](T1.ViewPersonReview_Network, T1.ViewPersonReview_Id, T1.ViewPersonReview_PersonId, T1.ViewPersonReview_Body, T1.ViewPersonReview_BodyAbs, T1.ViewPersonReview_Title, T1.ViewPersonReview_TotalRate, T1.ViewPersonReview_Date, T1.ViewPersonReview_DateConfirm, T1.ViewPersonReview_ToPersonId, T1.ViewPersonReview_ToPostId, T1.ViewPersonReview_ToNetworkGroupId, T1.ViewPersonReview_ToReviewId, T1.ViewPersonReview_ToTarget)
    FROM (
        SELECT 
            T.Network AS ViewPersonReview_Network, 
            T.Id AS ViewPersonReview_Id, 
            T.PersonId AS ViewPersonReview_PersonId, 
            T.Body AS ViewPersonReview_Body, 
            T.BodyAbs AS ViewPersonReview_BodyAbs, 
            T.Title AS ViewPersonReview_Title, 
            T.TotalRate AS ViewPersonReview_TotalRate, 
            T.Date AS ViewPersonReview_Date, 
            T.DateConfirm AS ViewPersonReview_DateConfirm, 
            T.ToPersonId AS ViewPersonReview_ToPersonId, 
            T.ToPostId AS ViewPersonReview_ToPostId, 
            T.ToNetworkGroupId AS ViewPersonReview_ToNetworkGroupId, 
            T.ToReviewId AS ViewPersonReview_ToReviewId, 
            T.ToTarget AS ViewPersonReview_ToTarget, 
            True AS _from0
        FROM EPAGRIFFINEntities.ViewPersonReviews AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.ViewPersonReviews.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView89()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewPersonReviews
        [EPAGRIFFINModel.ViewPersonReview](T1.ViewPersonReview_Network, T1.ViewPersonReview_Id, T1.ViewPersonReview_PersonId, T1.ViewPersonReview_Body, T1.ViewPersonReview_BodyAbs, T1.ViewPersonReview_Title, T1.ViewPersonReview_TotalRate, T1.ViewPersonReview_Date, T1.ViewPersonReview_DateConfirm, T1.ViewPersonReview_ToPersonId, T1.ViewPersonReview_ToPostId, T1.ViewPersonReview_ToNetworkGroupId, T1.ViewPersonReview_ToReviewId, T1.ViewPersonReview_ToTarget)
    FROM (
        SELECT 
            T.Network AS ViewPersonReview_Network, 
            T.Id AS ViewPersonReview_Id, 
            T.PersonId AS ViewPersonReview_PersonId, 
            T.Body AS ViewPersonReview_Body, 
            T.BodyAbs AS ViewPersonReview_BodyAbs, 
            T.Title AS ViewPersonReview_Title, 
            T.TotalRate AS ViewPersonReview_TotalRate, 
            T.Date AS ViewPersonReview_Date, 
            T.DateConfirm AS ViewPersonReview_DateConfirm, 
            T.ToPersonId AS ViewPersonReview_ToPersonId, 
            T.ToPostId AS ViewPersonReview_ToPostId, 
            T.ToNetworkGroupId AS ViewPersonReview_ToNetworkGroupId, 
            T.ToReviewId AS ViewPersonReview_ToReviewId, 
            T.ToTarget AS ViewPersonReview_ToTarget, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.ViewPersonReview AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.ViewPrinter.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView90()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewPrinter
        [EPAGRIFFINModel.Store.ViewPrinter](T1.ViewPrinter_Id, T1.ViewPrinter_CompanyId, T1.ViewPrinter_Name, T1.ViewPrinter_MinLayerHeight, T1.ViewPrinter_MaxLayerHeight, T1.ViewPrinter_PrintingSpeed, T1.ViewPrinter_PrintingSpeedStr, T1.ViewPrinter_ObjectFile, T1.ViewPrinter_Color, T1.[ViewPrinter.BuildVolume_W], T1.[ViewPrinter.BuildVolume_H], T1.[ViewPrinter.BuildVolume_D], T1.ViewPrinter_BuildVolume, T1.[ViewPrinter.Min_LH], T1.[ViewPrinter.Max_LH], T1.ViewPrinter_Materials, T1.ViewPrinter_Technologies)
    FROM (
        SELECT 
            T.Id AS ViewPrinter_Id, 
            T.CompanyId AS ViewPrinter_CompanyId, 
            T.Name AS ViewPrinter_Name, 
            T.MinLayerHeight AS ViewPrinter_MinLayerHeight, 
            T.MaxLayerHeight AS ViewPrinter_MaxLayerHeight, 
            T.PrintingSpeed AS ViewPrinter_PrintingSpeed, 
            T.PrintingSpeedStr AS ViewPrinter_PrintingSpeedStr, 
            T.ObjectFile AS ViewPrinter_ObjectFile, 
            T.Color AS ViewPrinter_Color, 
            T.BuildVolume_W AS [ViewPrinter.BuildVolume_W], 
            T.BuildVolume_H AS [ViewPrinter.BuildVolume_H], 
            T.BuildVolume_D AS [ViewPrinter.BuildVolume_D], 
            T.BuildVolume AS ViewPrinter_BuildVolume, 
            T.Min_LH AS [ViewPrinter.Min_LH], 
            T.Max_LH AS [ViewPrinter.Max_LH], 
            T.Materials AS ViewPrinter_Materials, 
            T.Technologies AS ViewPrinter_Technologies, 
            True AS _from0
        FROM EPAGRIFFINEntities.ViewPrinters AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.ViewPrinters.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView91()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewPrinters
        [EPAGRIFFINModel.ViewPrinter](T1.ViewPrinter_Id, T1.ViewPrinter_CompanyId, T1.ViewPrinter_Name, T1.ViewPrinter_MinLayerHeight, T1.ViewPrinter_MaxLayerHeight, T1.ViewPrinter_PrintingSpeed, T1.ViewPrinter_PrintingSpeedStr, T1.ViewPrinter_ObjectFile, T1.ViewPrinter_Color, T1.[ViewPrinter.BuildVolume_W], T1.[ViewPrinter.BuildVolume_H], T1.[ViewPrinter.BuildVolume_D], T1.ViewPrinter_BuildVolume, T1.[ViewPrinter.Min_LH], T1.[ViewPrinter.Max_LH], T1.ViewPrinter_Materials, T1.ViewPrinter_Technologies)
    FROM (
        SELECT 
            T.Id AS ViewPrinter_Id, 
            T.CompanyId AS ViewPrinter_CompanyId, 
            T.Name AS ViewPrinter_Name, 
            T.MinLayerHeight AS ViewPrinter_MinLayerHeight, 
            T.MaxLayerHeight AS ViewPrinter_MaxLayerHeight, 
            T.PrintingSpeed AS ViewPrinter_PrintingSpeed, 
            T.PrintingSpeedStr AS ViewPrinter_PrintingSpeedStr, 
            T.ObjectFile AS ViewPrinter_ObjectFile, 
            T.Color AS ViewPrinter_Color, 
            T.BuildVolume_W AS [ViewPrinter.BuildVolume_W], 
            T.BuildVolume_H AS [ViewPrinter.BuildVolume_H], 
            T.BuildVolume_D AS [ViewPrinter.BuildVolume_D], 
            T.BuildVolume AS ViewPrinter_BuildVolume, 
            T.Min_LH AS [ViewPrinter.Min_LH], 
            T.Max_LH AS [ViewPrinter.Max_LH], 
            T.Materials AS ViewPrinter_Materials, 
            T.Technologies AS ViewPrinter_Technologies, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.ViewPrinter AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.ViewPrinter2Optic.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView92()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewPrinter2Optic
        [EPAGRIFFINModel.Store.ViewPrinter2Optic](T1.ViewPrinter2Optic_PrinterId, T1.ViewPrinter2Optic_OpticId, T1.ViewPrinter2Optic_Remark, T1.ViewPrinter2Optic_Optic)
    FROM (
        SELECT 
            T.PrinterId AS ViewPrinter2Optic_PrinterId, 
            T.OpticId AS ViewPrinter2Optic_OpticId, 
            T.Remark AS ViewPrinter2Optic_Remark, 
            T.Optic AS ViewPrinter2Optic_Optic, 
            True AS _from0
        FROM EPAGRIFFINEntities.ViewPrinter2Optic AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.ViewPrinter2Optic.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView93()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewPrinter2Optic
        [EPAGRIFFINModel.ViewPrinter2Optic](T1.ViewPrinter2Optic_PrinterId, T1.ViewPrinter2Optic_OpticId, T1.ViewPrinter2Optic_Remark, T1.ViewPrinter2Optic_Optic)
    FROM (
        SELECT 
            T.PrinterId AS ViewPrinter2Optic_PrinterId, 
            T.OpticId AS ViewPrinter2Optic_OpticId, 
            T.Remark AS ViewPrinter2Optic_Remark, 
            T.Optic AS ViewPrinter2Optic_Optic, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.ViewPrinter2Optic AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.ViewPrinterTechnology.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView94()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewPrinterTechnology
        [EPAGRIFFINModel.Store.ViewPrinterTechnology](T1.ViewPrinterTechnology_PrinterId, T1.ViewPrinterTechnology_Remark, T1.ViewPrinterTechnology_TechnologyId, T1.ViewPrinterTechnology_Technology)
    FROM (
        SELECT 
            T.PrinterId AS ViewPrinterTechnology_PrinterId, 
            T.Remark AS ViewPrinterTechnology_Remark, 
            T.TechnologyId AS ViewPrinterTechnology_TechnologyId, 
            T.Technology AS ViewPrinterTechnology_Technology, 
            True AS _from0
        FROM EPAGRIFFINEntities.ViewPrinterTechnologies AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.ViewPrinterTechnologies.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView95()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewPrinterTechnologies
        [EPAGRIFFINModel.ViewPrinterTechnology](T1.ViewPrinterTechnology_PrinterId, T1.ViewPrinterTechnology_Remark, T1.ViewPrinterTechnology_TechnologyId, T1.ViewPrinterTechnology_Technology)
    FROM (
        SELECT 
            T.PrinterId AS ViewPrinterTechnology_PrinterId, 
            T.Remark AS ViewPrinterTechnology_Remark, 
            T.TechnologyId AS ViewPrinterTechnology_TechnologyId, 
            T.Technology AS ViewPrinterTechnology_Technology, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.ViewPrinterTechnology AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.ViewProject.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView96()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewProject
        [EPAGRIFFINModel.Store.ViewProject](T1.ViewProject_Id, T1.ViewProject_Title, T1.ViewProject_Date, T1.ViewProject_DateStr, T1.ViewProject_Remark, T1.ViewProject_PersonId)
    FROM (
        SELECT 
            T.Id AS ViewProject_Id, 
            T.Title AS ViewProject_Title, 
            T.Date AS ViewProject_Date, 
            T.DateStr AS ViewProject_DateStr, 
            T.Remark AS ViewProject_Remark, 
            T.PersonId AS ViewProject_PersonId, 
            True AS _from0
        FROM EPAGRIFFINEntities.ViewProjects AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.ViewProjects.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView97()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewProjects
        [EPAGRIFFINModel.ViewProject](T1.ViewProject_Id, T1.ViewProject_Title, T1.ViewProject_Date, T1.ViewProject_DateStr, T1.ViewProject_Remark, T1.ViewProject_PersonId)
    FROM (
        SELECT 
            T.Id AS ViewProject_Id, 
            T.Title AS ViewProject_Title, 
            T.Date AS ViewProject_Date, 
            T.DateStr AS ViewProject_DateStr, 
            T.Remark AS ViewProject_Remark, 
            T.PersonId AS ViewProject_PersonId, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.ViewProject AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.ViewUserContentActivity.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView98()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewUserContentActivity
        [EPAGRIFFINModel.Store.ViewUserContentActivity](T1.ViewUserContentActivity_Id, T1.ViewUserContentActivity_ReviewId, T1.ViewUserContentActivity_Remark, T1.ViewUserContentActivity_Date, T1.ViewUserContentActivity_DateStr, T1.ViewUserContentActivity_PersonId, T1.ViewUserContentActivity_ReviewAbs, T1.ViewUserContentActivity_TotalRate, T1.ViewUserContentActivity_Type)
    FROM (
        SELECT 
            T.Id AS ViewUserContentActivity_Id, 
            T.ReviewId AS ViewUserContentActivity_ReviewId, 
            T.Remark AS ViewUserContentActivity_Remark, 
            T.Date AS ViewUserContentActivity_Date, 
            T.DateStr AS ViewUserContentActivity_DateStr, 
            T.PersonId AS ViewUserContentActivity_PersonId, 
            T.ReviewAbs AS ViewUserContentActivity_ReviewAbs, 
            T.TotalRate AS ViewUserContentActivity_TotalRate, 
            T.Type AS ViewUserContentActivity_Type, 
            True AS _from0
        FROM EPAGRIFFINEntities.ViewUserContentActivities AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.ViewUserContentActivities.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView99()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewUserContentActivities
        [EPAGRIFFINModel.ViewUserContentActivity](T1.ViewUserContentActivity_Id, T1.ViewUserContentActivity_ReviewId, T1.ViewUserContentActivity_Remark, T1.ViewUserContentActivity_Date, T1.ViewUserContentActivity_DateStr, T1.ViewUserContentActivity_PersonId, T1.ViewUserContentActivity_ReviewAbs, T1.ViewUserContentActivity_TotalRate, T1.ViewUserContentActivity_Type)
    FROM (
        SELECT 
            T.Id AS ViewUserContentActivity_Id, 
            T.ReviewId AS ViewUserContentActivity_ReviewId, 
            T.Remark AS ViewUserContentActivity_Remark, 
            T.Date AS ViewUserContentActivity_Date, 
            T.DateStr AS ViewUserContentActivity_DateStr, 
            T.PersonId AS ViewUserContentActivity_PersonId, 
            T.ReviewAbs AS ViewUserContentActivity_ReviewAbs, 
            T.TotalRate AS ViewUserContentActivity_TotalRate, 
            T.Type AS ViewUserContentActivity_Type, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.ViewUserContentActivity AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.ViewManufacturer.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView100()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewManufacturer
        [EPAGRIFFINModel.Store.ViewManufacturer](T1.ViewManufacturer_Id, T1.ViewManufacturer_Name, T1.ViewManufacturer_Website)
    FROM (
        SELECT 
            T.Id AS ViewManufacturer_Id, 
            T.Name AS ViewManufacturer_Name, 
            T.Website AS ViewManufacturer_Website, 
            True AS _from0
        FROM EPAGRIFFINEntities.ViewManufacturers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.ViewManufacturers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView101()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewManufacturers
        [EPAGRIFFINModel.ViewManufacturer](T1.ViewManufacturer_Id, T1.ViewManufacturer_Name, T1.ViewManufacturer_Website)
    FROM (
        SELECT 
            T.Id AS ViewManufacturer_Id, 
            T.Name AS ViewManufacturer_Name, 
            T.Website AS ViewManufacturer_Website, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.ViewManufacturer AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.ViewPrinterModel.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView102()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewPrinterModel
        [EPAGRIFFINModel.Store.ViewPrinterModel](T1.ViewPrinterModel_Id, T1.ViewPrinterModel_ManId, T1.ViewPrinterModel_Name, T1.ViewPrinterModel_Manufacturer, T1.ViewPrinterModel_Website)
    FROM (
        SELECT 
            T.Id AS ViewPrinterModel_Id, 
            T.ManId AS ViewPrinterModel_ManId, 
            T.Name AS ViewPrinterModel_Name, 
            T.Manufacturer AS ViewPrinterModel_Manufacturer, 
            T.Website AS ViewPrinterModel_Website, 
            True AS _from0
        FROM EPAGRIFFINEntities.ViewPrinterModels AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.ViewPrinterModels.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView103()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewPrinterModels
        [EPAGRIFFINModel.ViewPrinterModel](T1.ViewPrinterModel_Id, T1.ViewPrinterModel_ManId, T1.ViewPrinterModel_Name, T1.ViewPrinterModel_Manufacturer, T1.ViewPrinterModel_Website)
    FROM (
        SELECT 
            T.Id AS ViewPrinterModel_Id, 
            T.ManId AS ViewPrinterModel_ManId, 
            T.Name AS ViewPrinterModel_Name, 
            T.Manufacturer AS ViewPrinterModel_Manufacturer, 
            T.Website AS ViewPrinterModel_Website, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.ViewPrinterModel AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.Printer2.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView104()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Printer2
        [EPAGRIFFINModel.Store.Printer2](T1.Printer2_Id, T1.Printer2_ModelId, T1.Printer2_MachineModeId, T1.Printer2_AMProcessId, T1.Printer2_AMTechnologyId, T1.Printer2_MinPrice, T1.Printer2_MaxPrice, T1.Printer2_YearRetired, T1.Printer2_DimensionX, T1.Printer2_DimensionY, T1.Printer2_DimensionZ, T1.Printer2_LayerMin, T1.Printer2_LayerMax, T1.Printer2_FocusDiameterMin, T1.Printer2_FocusDiameterMax, T1.Printer2_ScanningSpeedMax, T1.Printer2_ScanningSpeedMin, T1.Printer2_Power, T1.Printer2_PrintheadNo, T1.Printer2_FilamentDiameter, T1.Printer2_Tolerance, T1.Printer2_LasersNo, T1.Printer2_LaserTypeId, T1.Printer2_LaserWavelength, T1.Printer2_MaxBeamPower, T1.Printer2_OpenSourceId, T1.Printer2_RestrictedId, T1.Printer2_HeatedPlatformId, T1.Printer2_ControlsId, T1.Printer2_CategoryId, T1.Printer2_GUID, T1.Printer2_ImageUrl)
    FROM (
        SELECT 
            T.Id AS Printer2_Id, 
            T.ModelId AS Printer2_ModelId, 
            T.MachineModeId AS Printer2_MachineModeId, 
            T.AMProcessId AS Printer2_AMProcessId, 
            T.AMTechnologyId AS Printer2_AMTechnologyId, 
            T.MinPrice AS Printer2_MinPrice, 
            T.MaxPrice AS Printer2_MaxPrice, 
            T.YearRetired AS Printer2_YearRetired, 
            T.DimensionX AS Printer2_DimensionX, 
            T.DimensionY AS Printer2_DimensionY, 
            T.DimensionZ AS Printer2_DimensionZ, 
            T.LayerMin AS Printer2_LayerMin, 
            T.LayerMax AS Printer2_LayerMax, 
            T.FocusDiameterMin AS Printer2_FocusDiameterMin, 
            T.FocusDiameterMax AS Printer2_FocusDiameterMax, 
            T.ScanningSpeedMax AS Printer2_ScanningSpeedMax, 
            T.ScanningSpeedMin AS Printer2_ScanningSpeedMin, 
            T.Power AS Printer2_Power, 
            T.PrintheadNo AS Printer2_PrintheadNo, 
            T.FilamentDiameter AS Printer2_FilamentDiameter, 
            T.Tolerance AS Printer2_Tolerance, 
            T.LasersNo AS Printer2_LasersNo, 
            T.LaserTypeId AS Printer2_LaserTypeId, 
            T.LaserWavelength AS Printer2_LaserWavelength, 
            T.MaxBeamPower AS Printer2_MaxBeamPower, 
            T.OpenSourceId AS Printer2_OpenSourceId, 
            T.RestrictedId AS Printer2_RestrictedId, 
            T.HeatedPlatformId AS Printer2_HeatedPlatformId, 
            T.ControlsId AS Printer2_ControlsId, 
            T.CategoryId AS Printer2_CategoryId, 
            T.GUID AS Printer2_GUID, 
            T.ImageUrl AS Printer2_ImageUrl, 
            True AS _from0
        FROM EPAGRIFFINEntities.Printer2 AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.Printer2.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView105()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Printer2
        [EPAGRIFFINModel.Printer2](T1.Printer2_Id, T1.Printer2_ModelId, T1.Printer2_MachineModeId, T1.Printer2_AMProcessId, T1.Printer2_AMTechnologyId, T1.Printer2_MinPrice, T1.Printer2_MaxPrice, T1.Printer2_YearRetired, T1.Printer2_DimensionX, T1.Printer2_DimensionY, T1.Printer2_DimensionZ, T1.Printer2_LayerMin, T1.Printer2_LayerMax, T1.Printer2_FocusDiameterMin, T1.Printer2_FocusDiameterMax, T1.Printer2_ScanningSpeedMax, T1.Printer2_ScanningSpeedMin, T1.Printer2_Power, T1.Printer2_PrintheadNo, T1.Printer2_FilamentDiameter, T1.Printer2_Tolerance, T1.Printer2_LasersNo, T1.Printer2_LaserTypeId, T1.Printer2_LaserWavelength, T1.Printer2_MaxBeamPower, T1.Printer2_OpenSourceId, T1.Printer2_RestrictedId, T1.Printer2_HeatedPlatformId, T1.Printer2_ControlsId, T1.Printer2_CategoryId, T1.Printer2_GUID, T1.Printer2_ImageUrl)
    FROM (
        SELECT 
            T.Id AS Printer2_Id, 
            T.ModelId AS Printer2_ModelId, 
            T.MachineModeId AS Printer2_MachineModeId, 
            T.AMProcessId AS Printer2_AMProcessId, 
            T.AMTechnologyId AS Printer2_AMTechnologyId, 
            T.MinPrice AS Printer2_MinPrice, 
            T.MaxPrice AS Printer2_MaxPrice, 
            T.YearRetired AS Printer2_YearRetired, 
            T.DimensionX AS Printer2_DimensionX, 
            T.DimensionY AS Printer2_DimensionY, 
            T.DimensionZ AS Printer2_DimensionZ, 
            T.LayerMin AS Printer2_LayerMin, 
            T.LayerMax AS Printer2_LayerMax, 
            T.FocusDiameterMin AS Printer2_FocusDiameterMin, 
            T.FocusDiameterMax AS Printer2_FocusDiameterMax, 
            T.ScanningSpeedMax AS Printer2_ScanningSpeedMax, 
            T.ScanningSpeedMin AS Printer2_ScanningSpeedMin, 
            T.Power AS Printer2_Power, 
            T.PrintheadNo AS Printer2_PrintheadNo, 
            T.FilamentDiameter AS Printer2_FilamentDiameter, 
            T.Tolerance AS Printer2_Tolerance, 
            T.LasersNo AS Printer2_LasersNo, 
            T.LaserTypeId AS Printer2_LaserTypeId, 
            T.LaserWavelength AS Printer2_LaserWavelength, 
            T.MaxBeamPower AS Printer2_MaxBeamPower, 
            T.OpenSourceId AS Printer2_OpenSourceId, 
            T.RestrictedId AS Printer2_RestrictedId, 
            T.HeatedPlatformId AS Printer2_HeatedPlatformId, 
            T.ControlsId AS Printer2_ControlsId, 
            T.CategoryId AS Printer2_CategoryId, 
            T.GUID AS Printer2_GUID, 
            T.ImageUrl AS Printer2_ImageUrl, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.Printer2 AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.ViewPrinter2.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView106()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewPrinter2
        [EPAGRIFFINModel.Store.ViewPrinter2](T1.ViewPrinter2_Id, T1.ViewPrinter2_ModelId, T1.ViewPrinter2_MachineModeId, T1.ViewPrinter2_AMProcessId, T1.ViewPrinter2_AMTechnologyId, T1.ViewPrinter2_MinPrice, T1.ViewPrinter2_MaxPrice, T1.ViewPrinter2_PriceRange, T1.ViewPrinter2_YearRetired, T1.ViewPrinter2_DimensionX, T1.ViewPrinter2_DimensionY, T1.ViewPrinter2_DimensionZ, T1.ViewPrinter2_DimensionXinch, T1.ViewPrinter2_DimensionYinch, T1.ViewPrinter2_DimensionZinch, T1.ViewPrinter2_LayerMin, T1.ViewPrinter2_LayerMax, T1.ViewPrinter2_FocusDiameterMin, T1.ViewPrinter2_FocusDiameterMininch, T1.ViewPrinter2_FocusDiameterMax, T1.ViewPrinter2_FocusDiameterMaxinch, T1.ViewPrinter2_ScanningSpeedMax, T1.ViewPrinter2_ScanningSpeedMaxinch, T1.ViewPrinter2_ScanningSpeedMin, T1.ViewPrinter2_ScanningSpeedMininch, T1.ViewPrinter2_Power, T1.ViewPrinter2_PrintheadNo, T1.ViewPrinter2_FilamentDiameter, T1.ViewPrinter2_Tolerance, T1.ViewPrinter2_LasersNo, T1.ViewPrinter2_LaserTypeId, T1.ViewPrinter2_LaserWavelength, T1.ViewPrinter2_MaxBeamPower, T1.ViewPrinter2_OpenSourceId, T1.ViewPrinter2_RestrictedId, T1.ViewPrinter2_HeatedPlatformId, T1.ViewPrinter2_ControlsId, T1.ViewPrinter2_CategoryId, T1.ViewPrinter2_GUID, T1.ViewPrinter2_Category, T1.ViewPrinter2_Controls, T1.ViewPrinter2_HeatedPlatform, T1.ViewPrinter2_Restricted, T1.ViewPrinter2_OpenSource, T1.ViewPrinter2_LaserType, T1.ViewPrinter2_AMProcess, T1.ViewPrinter2_MachineMode, T1.ViewPrinter2_Model, T1.ViewPrinter2_Manufacturer, T1.ViewPrinter2_Website, T1.ViewPrinter2_ManufacturerId, T1.ViewPrinter2_MaterialsGeneral, T1.ViewPrinter2_MaterialsSpecific, T1.ViewPrinter2_AMTechnology, T1.ViewPrinter2_Optics, T1.ViewPrinter2_ImageUrl)
    FROM (
        SELECT 
            T.Id AS ViewPrinter2_Id, 
            T.ModelId AS ViewPrinter2_ModelId, 
            T.MachineModeId AS ViewPrinter2_MachineModeId, 
            T.AMProcessId AS ViewPrinter2_AMProcessId, 
            T.AMTechnologyId AS ViewPrinter2_AMTechnologyId, 
            T.MinPrice AS ViewPrinter2_MinPrice, 
            T.MaxPrice AS ViewPrinter2_MaxPrice, 
            T.PriceRange AS ViewPrinter2_PriceRange, 
            T.YearRetired AS ViewPrinter2_YearRetired, 
            T.DimensionX AS ViewPrinter2_DimensionX, 
            T.DimensionY AS ViewPrinter2_DimensionY, 
            T.DimensionZ AS ViewPrinter2_DimensionZ, 
            T.DimensionXinch AS ViewPrinter2_DimensionXinch, 
            T.DimensionYinch AS ViewPrinter2_DimensionYinch, 
            T.DimensionZinch AS ViewPrinter2_DimensionZinch, 
            T.LayerMin AS ViewPrinter2_LayerMin, 
            T.LayerMax AS ViewPrinter2_LayerMax, 
            T.FocusDiameterMin AS ViewPrinter2_FocusDiameterMin, 
            T.FocusDiameterMininch AS ViewPrinter2_FocusDiameterMininch, 
            T.FocusDiameterMax AS ViewPrinter2_FocusDiameterMax, 
            T.FocusDiameterMaxinch AS ViewPrinter2_FocusDiameterMaxinch, 
            T.ScanningSpeedMax AS ViewPrinter2_ScanningSpeedMax, 
            T.ScanningSpeedMaxinch AS ViewPrinter2_ScanningSpeedMaxinch, 
            T.ScanningSpeedMin AS ViewPrinter2_ScanningSpeedMin, 
            T.ScanningSpeedMininch AS ViewPrinter2_ScanningSpeedMininch, 
            T.Power AS ViewPrinter2_Power, 
            T.PrintheadNo AS ViewPrinter2_PrintheadNo, 
            T.FilamentDiameter AS ViewPrinter2_FilamentDiameter, 
            T.Tolerance AS ViewPrinter2_Tolerance, 
            T.LasersNo AS ViewPrinter2_LasersNo, 
            T.LaserTypeId AS ViewPrinter2_LaserTypeId, 
            T.LaserWavelength AS ViewPrinter2_LaserWavelength, 
            T.MaxBeamPower AS ViewPrinter2_MaxBeamPower, 
            T.OpenSourceId AS ViewPrinter2_OpenSourceId, 
            T.RestrictedId AS ViewPrinter2_RestrictedId, 
            T.HeatedPlatformId AS ViewPrinter2_HeatedPlatformId, 
            T.ControlsId AS ViewPrinter2_ControlsId, 
            T.CategoryId AS ViewPrinter2_CategoryId, 
            T.GUID AS ViewPrinter2_GUID, 
            T.Category AS ViewPrinter2_Category, 
            T.Controls AS ViewPrinter2_Controls, 
            T.HeatedPlatform AS ViewPrinter2_HeatedPlatform, 
            T.Restricted AS ViewPrinter2_Restricted, 
            T.OpenSource AS ViewPrinter2_OpenSource, 
            T.LaserType AS ViewPrinter2_LaserType, 
            T.AMProcess AS ViewPrinter2_AMProcess, 
            T.MachineMode AS ViewPrinter2_MachineMode, 
            T.Model AS ViewPrinter2_Model, 
            T.Manufacturer AS ViewPrinter2_Manufacturer, 
            T.Website AS ViewPrinter2_Website, 
            T.ManufacturerId AS ViewPrinter2_ManufacturerId, 
            T.MaterialsGeneral AS ViewPrinter2_MaterialsGeneral, 
            T.MaterialsSpecific AS ViewPrinter2_MaterialsSpecific, 
            T.AMTechnology AS ViewPrinter2_AMTechnology, 
            T.Optics AS ViewPrinter2_Optics, 
            T.ImageUrl AS ViewPrinter2_ImageUrl, 
            True AS _from0
        FROM EPAGRIFFINEntities.ViewPrinter2 AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.ViewPrinter2.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView107()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewPrinter2
        [EPAGRIFFINModel.ViewPrinter2](T1.ViewPrinter2_Id, T1.ViewPrinter2_ModelId, T1.ViewPrinter2_MachineModeId, T1.ViewPrinter2_AMProcessId, T1.ViewPrinter2_AMTechnologyId, T1.ViewPrinter2_MinPrice, T1.ViewPrinter2_MaxPrice, T1.ViewPrinter2_PriceRange, T1.ViewPrinter2_YearRetired, T1.ViewPrinter2_DimensionX, T1.ViewPrinter2_DimensionY, T1.ViewPrinter2_DimensionZ, T1.ViewPrinter2_DimensionXinch, T1.ViewPrinter2_DimensionYinch, T1.ViewPrinter2_DimensionZinch, T1.ViewPrinter2_LayerMin, T1.ViewPrinter2_LayerMax, T1.ViewPrinter2_FocusDiameterMin, T1.ViewPrinter2_FocusDiameterMininch, T1.ViewPrinter2_FocusDiameterMax, T1.ViewPrinter2_FocusDiameterMaxinch, T1.ViewPrinter2_ScanningSpeedMax, T1.ViewPrinter2_ScanningSpeedMaxinch, T1.ViewPrinter2_ScanningSpeedMin, T1.ViewPrinter2_ScanningSpeedMininch, T1.ViewPrinter2_Power, T1.ViewPrinter2_PrintheadNo, T1.ViewPrinter2_FilamentDiameter, T1.ViewPrinter2_Tolerance, T1.ViewPrinter2_LasersNo, T1.ViewPrinter2_LaserTypeId, T1.ViewPrinter2_LaserWavelength, T1.ViewPrinter2_MaxBeamPower, T1.ViewPrinter2_OpenSourceId, T1.ViewPrinter2_RestrictedId, T1.ViewPrinter2_HeatedPlatformId, T1.ViewPrinter2_ControlsId, T1.ViewPrinter2_CategoryId, T1.ViewPrinter2_GUID, T1.ViewPrinter2_Category, T1.ViewPrinter2_Controls, T1.ViewPrinter2_HeatedPlatform, T1.ViewPrinter2_Restricted, T1.ViewPrinter2_OpenSource, T1.ViewPrinter2_LaserType, T1.ViewPrinter2_AMProcess, T1.ViewPrinter2_MachineMode, T1.ViewPrinter2_Model, T1.ViewPrinter2_Manufacturer, T1.ViewPrinter2_Website, T1.ViewPrinter2_ManufacturerId, T1.ViewPrinter2_MaterialsGeneral, T1.ViewPrinter2_MaterialsSpecific, T1.ViewPrinter2_AMTechnology, T1.ViewPrinter2_Optics, T1.ViewPrinter2_ImageUrl)
    FROM (
        SELECT 
            T.Id AS ViewPrinter2_Id, 
            T.ModelId AS ViewPrinter2_ModelId, 
            T.MachineModeId AS ViewPrinter2_MachineModeId, 
            T.AMProcessId AS ViewPrinter2_AMProcessId, 
            T.AMTechnologyId AS ViewPrinter2_AMTechnologyId, 
            T.MinPrice AS ViewPrinter2_MinPrice, 
            T.MaxPrice AS ViewPrinter2_MaxPrice, 
            T.PriceRange AS ViewPrinter2_PriceRange, 
            T.YearRetired AS ViewPrinter2_YearRetired, 
            T.DimensionX AS ViewPrinter2_DimensionX, 
            T.DimensionY AS ViewPrinter2_DimensionY, 
            T.DimensionZ AS ViewPrinter2_DimensionZ, 
            T.DimensionXinch AS ViewPrinter2_DimensionXinch, 
            T.DimensionYinch AS ViewPrinter2_DimensionYinch, 
            T.DimensionZinch AS ViewPrinter2_DimensionZinch, 
            T.LayerMin AS ViewPrinter2_LayerMin, 
            T.LayerMax AS ViewPrinter2_LayerMax, 
            T.FocusDiameterMin AS ViewPrinter2_FocusDiameterMin, 
            T.FocusDiameterMininch AS ViewPrinter2_FocusDiameterMininch, 
            T.FocusDiameterMax AS ViewPrinter2_FocusDiameterMax, 
            T.FocusDiameterMaxinch AS ViewPrinter2_FocusDiameterMaxinch, 
            T.ScanningSpeedMax AS ViewPrinter2_ScanningSpeedMax, 
            T.ScanningSpeedMaxinch AS ViewPrinter2_ScanningSpeedMaxinch, 
            T.ScanningSpeedMin AS ViewPrinter2_ScanningSpeedMin, 
            T.ScanningSpeedMininch AS ViewPrinter2_ScanningSpeedMininch, 
            T.Power AS ViewPrinter2_Power, 
            T.PrintheadNo AS ViewPrinter2_PrintheadNo, 
            T.FilamentDiameter AS ViewPrinter2_FilamentDiameter, 
            T.Tolerance AS ViewPrinter2_Tolerance, 
            T.LasersNo AS ViewPrinter2_LasersNo, 
            T.LaserTypeId AS ViewPrinter2_LaserTypeId, 
            T.LaserWavelength AS ViewPrinter2_LaserWavelength, 
            T.MaxBeamPower AS ViewPrinter2_MaxBeamPower, 
            T.OpenSourceId AS ViewPrinter2_OpenSourceId, 
            T.RestrictedId AS ViewPrinter2_RestrictedId, 
            T.HeatedPlatformId AS ViewPrinter2_HeatedPlatformId, 
            T.ControlsId AS ViewPrinter2_ControlsId, 
            T.CategoryId AS ViewPrinter2_CategoryId, 
            T.GUID AS ViewPrinter2_GUID, 
            T.Category AS ViewPrinter2_Category, 
            T.Controls AS ViewPrinter2_Controls, 
            T.HeatedPlatform AS ViewPrinter2_HeatedPlatform, 
            T.Restricted AS ViewPrinter2_Restricted, 
            T.OpenSource AS ViewPrinter2_OpenSource, 
            T.LaserType AS ViewPrinter2_LaserType, 
            T.AMProcess AS ViewPrinter2_AMProcess, 
            T.MachineMode AS ViewPrinter2_MachineMode, 
            T.Model AS ViewPrinter2_Model, 
            T.Manufacturer AS ViewPrinter2_Manufacturer, 
            T.Website AS ViewPrinter2_Website, 
            T.ManufacturerId AS ViewPrinter2_ManufacturerId, 
            T.MaterialsGeneral AS ViewPrinter2_MaterialsGeneral, 
            T.MaterialsSpecific AS ViewPrinter2_MaterialsSpecific, 
            T.AMTechnology AS ViewPrinter2_AMTechnology, 
            T.Optics AS ViewPrinter2_Optics, 
            T.ImageUrl AS ViewPrinter2_ImageUrl, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.ViewPrinter2 AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.Material.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView108()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Material
        [EPAGRIFFINModel.Store.Material](T1.Material_Id, T1.Material_Material, T1.Material_Supplier, T1.Material_ManWebsite, T1.Material_General, T1.Material_Specific, T1.Material_TensileStrength, T1.Material_TensileStrengthStandard, T1.Material_FlexuralStrength, T1.Material_FlexuralStrengthStandard, T1.Material_FlexuralModulus, T1.Material_FlexuralModulusStandard, T1.Material_ElongationAtBreak, T1.Material_SolidDensity, T1.Material_DensityStandard, T1.Material_MinParticleSize, T1.Material_MaxParticleSize, T1.Material_PostProcessed, T1.Material_PostProcessingConditions, T1.Material_SolubleSupport, T1.Material_SupportMaterialName, T1.Material_SupportMaterialType, T1.Material_YearReleased)
    FROM (
        SELECT 
            T.Id AS Material_Id, 
            T.Material1 AS Material_Material, 
            T.Supplier AS Material_Supplier, 
            T.ManWebsite AS Material_ManWebsite, 
            T.General AS Material_General, 
            T.Specific AS Material_Specific, 
            T.TensileStrength AS Material_TensileStrength, 
            T.TensileStrengthStandard AS Material_TensileStrengthStandard, 
            T.FlexuralStrength AS Material_FlexuralStrength, 
            T.FlexuralStrengthStandard AS Material_FlexuralStrengthStandard, 
            T.FlexuralModulus AS Material_FlexuralModulus, 
            T.FlexuralModulusStandard AS Material_FlexuralModulusStandard, 
            T.ElongationAtBreak AS Material_ElongationAtBreak, 
            T.SolidDensity AS Material_SolidDensity, 
            T.DensityStandard AS Material_DensityStandard, 
            T.MinParticleSize AS Material_MinParticleSize, 
            T.MaxParticleSize AS Material_MaxParticleSize, 
            T.PostProcessed AS Material_PostProcessed, 
            T.PostProcessingConditions AS Material_PostProcessingConditions, 
            T.SolubleSupport AS Material_SolubleSupport, 
            T.SupportMaterialName AS Material_SupportMaterialName, 
            T.SupportMaterialType AS Material_SupportMaterialType, 
            T.YearReleased AS Material_YearReleased, 
            True AS _from0
        FROM EPAGRIFFINEntities.Materials AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.Materials.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView109()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Materials
        [EPAGRIFFINModel.Material](T1.Material_Id, T1.Material_Material1, T1.Material_Supplier, T1.Material_ManWebsite, T1.Material_General, T1.Material_Specific, T1.Material_TensileStrength, T1.Material_TensileStrengthStandard, T1.Material_FlexuralStrength, T1.Material_FlexuralStrengthStandard, T1.Material_FlexuralModulus, T1.Material_FlexuralModulusStandard, T1.Material_ElongationAtBreak, T1.Material_SolidDensity, T1.Material_DensityStandard, T1.Material_MinParticleSize, T1.Material_MaxParticleSize, T1.Material_PostProcessed, T1.Material_PostProcessingConditions, T1.Material_SolubleSupport, T1.Material_SupportMaterialName, T1.Material_SupportMaterialType, T1.Material_YearReleased)
    FROM (
        SELECT 
            T.Id AS Material_Id, 
            T.Material AS Material_Material1, 
            T.Supplier AS Material_Supplier, 
            T.ManWebsite AS Material_ManWebsite, 
            T.General AS Material_General, 
            T.Specific AS Material_Specific, 
            T.TensileStrength AS Material_TensileStrength, 
            T.TensileStrengthStandard AS Material_TensileStrengthStandard, 
            T.FlexuralStrength AS Material_FlexuralStrength, 
            T.FlexuralStrengthStandard AS Material_FlexuralStrengthStandard, 
            T.FlexuralModulus AS Material_FlexuralModulus, 
            T.FlexuralModulusStandard AS Material_FlexuralModulusStandard, 
            T.ElongationAtBreak AS Material_ElongationAtBreak, 
            T.SolidDensity AS Material_SolidDensity, 
            T.DensityStandard AS Material_DensityStandard, 
            T.MinParticleSize AS Material_MinParticleSize, 
            T.MaxParticleSize AS Material_MaxParticleSize, 
            T.PostProcessed AS Material_PostProcessed, 
            T.PostProcessingConditions AS Material_PostProcessingConditions, 
            T.SolubleSupport AS Material_SolubleSupport, 
            T.SupportMaterialName AS Material_SupportMaterialName, 
            T.SupportMaterialType AS Material_SupportMaterialType, 
            T.YearReleased AS Material_YearReleased, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.Material AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.Supplier.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView110()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Supplier
        [EPAGRIFFINModel.Store.Supplier](T1.Supplier_Id, T1.Supplier_Name, T1.Supplier_Remark)
    FROM (
        SELECT 
            T.Id AS Supplier_Id, 
            T.Name AS Supplier_Name, 
            T.Remark AS Supplier_Remark, 
            True AS _from0
        FROM EPAGRIFFINEntities.Suppliers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.Suppliers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView111()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Suppliers
        [EPAGRIFFINModel.Supplier](T1.Supplier_Id, T1.Supplier_Name, T1.Supplier_Remark)
    FROM (
        SELECT 
            T.Id AS Supplier_Id, 
            T.Name AS Supplier_Name, 
            T.Remark AS Supplier_Remark, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.Supplier AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.ViewAMProcess.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView112()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewAMProcess
        [EPAGRIFFINModel.Store.ViewAMProcess](T1.ViewAMProcess_AMProcessId, T1.ViewAMProcess_AMProcess)
    FROM (
        SELECT 
            T.AMProcessId AS ViewAMProcess_AMProcessId, 
            T.AMProcess AS ViewAMProcess_AMProcess, 
            True AS _from0
        FROM EPAGRIFFINEntities.ViewAMProcesses AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.ViewAMProcesses.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView113()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewAMProcesses
        [EPAGRIFFINModel.ViewAMProcess](T1.ViewAMProcess_AMProcessId, T1.ViewAMProcess_AMProcess)
    FROM (
        SELECT 
            T.AMProcessId AS ViewAMProcess_AMProcessId, 
            T.AMProcess AS ViewAMProcess_AMProcess, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.ViewAMProcess AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.ViewAmTechnology.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView114()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewAmTechnology
        [EPAGRIFFINModel.Store.ViewAmTechnology](T1.ViewAmTechnology_AMTechnologyId, T1.ViewAmTechnology_AMTechnology)
    FROM (
        SELECT 
            T.AMTechnologyId AS ViewAmTechnology_AMTechnologyId, 
            T.AMTechnology AS ViewAmTechnology_AMTechnology, 
            True AS _from0
        FROM EPAGRIFFINEntities.ViewAmTechnologies AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.ViewAmTechnologies.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView115()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewAmTechnologies
        [EPAGRIFFINModel.ViewAmTechnology](T1.ViewAmTechnology_AMTechnologyId, T1.ViewAmTechnology_AMTechnology)
    FROM (
        SELECT 
            T.AMTechnologyId AS ViewAmTechnology_AMTechnologyId, 
            T.AMTechnology AS ViewAmTechnology_AMTechnology, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.ViewAmTechnology AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.ViewCompanyPrinter.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView116()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewCompanyPrinter
        [EPAGRIFFINModel.Store.ViewCompanyPrinter](T1.ViewCompanyPrinter_Id, T1.ViewCompanyPrinter_PrinterId, T1.ViewCompanyPrinter_CompanyId, T1.ViewCompanyPrinter_ModelId, T1.ViewCompanyPrinter_MachineModeId, T1.ViewCompanyPrinter_AMProcessId, T1.ViewCompanyPrinter_AMTechnologyId, T1.ViewCompanyPrinter_MinPrice, T1.ViewCompanyPrinter_MaxPrice, T1.ViewCompanyPrinter_PriceRange, T1.ViewCompanyPrinter_YearRetired, T1.ViewCompanyPrinter_DimensionX, T1.ViewCompanyPrinter_DimensionY, T1.ViewCompanyPrinter_DimensionZ, T1.ViewCompanyPrinter_DimensionXinch, T1.ViewCompanyPrinter_DimensionYinch, T1.ViewCompanyPrinter_DimensionZinch, T1.ViewCompanyPrinter_LayerMin, T1.ViewCompanyPrinter_LayerMax, T1.ViewCompanyPrinter_FocusDiameterMin, T1.ViewCompanyPrinter_FocusDiameterMininch, T1.ViewCompanyPrinter_FocusDiameterMax, T1.ViewCompanyPrinter_FocusDiameterMaxinch, T1.ViewCompanyPrinter_ScanningSpeedMax, T1.ViewCompanyPrinter_ScanningSpeedMaxinch, T1.ViewCompanyPrinter_ScanningSpeedMin, T1.ViewCompanyPrinter_ScanningSpeedMininch, T1.ViewCompanyPrinter_PrintheadNo, T1.ViewCompanyPrinter_Power, T1.ViewCompanyPrinter_FilamentDiameter, T1.ViewCompanyPrinter_Tolerance, T1.ViewCompanyPrinter_LasersNo, T1.ViewCompanyPrinter_LaserTypeId, T1.ViewCompanyPrinter_LaserWavelength, T1.ViewCompanyPrinter_MaxBeamPower, T1.ViewCompanyPrinter_OpenSourceId, T1.ViewCompanyPrinter_RestrictedId, T1.ViewCompanyPrinter_HeatedPlatformId, T1.ViewCompanyPrinter_ControlsId, T1.ViewCompanyPrinter_CategoryId, T1.ViewCompanyPrinter_Category, T1.ViewCompanyPrinter_Controls, T1.ViewCompanyPrinter_HeatedPlatform, T1.ViewCompanyPrinter_Restricted, T1.ViewCompanyPrinter_OpenSource, T1.ViewCompanyPrinter_LaserType, T1.ViewCompanyPrinter_AMProcess, T1.ViewCompanyPrinter_MachineMode, T1.ViewCompanyPrinter_Model, T1.ViewCompanyPrinter_Manufacturer, T1.ViewCompanyPrinter_ManWebsite, T1.ViewCompanyPrinter_ManufacturerId, T1.ViewCompanyPrinter_MaterialsGeneral, T1.ViewCompanyPrinter_MaterialsSpecific, T1.ViewCompanyPrinter_AMTechnology, T1.ViewCompanyPrinter_Optics, T1.ViewCompanyPrinter_ManImageUrl, T1.ViewCompanyPrinter_Name, T1.ViewCompanyPrinter_Address, T1.ViewCompanyPrinter_Phone, T1.ViewCompanyPrinter_Email, T1.ViewCompanyPrinter_Website, T1.ViewCompanyPrinter_Url, T1.ViewCompanyPrinter_DateVerified, T1.ViewCompanyPrinter_DateVerifiedStr, T1.ViewCompanyPrinter_IsVerified, T1.ViewCompanyPrinter_Twitter, T1.ViewCompanyPrinter_LinkedIn, T1.ViewCompanyPrinter_RushDelivery24, T1.ViewCompanyPrinter_RushDelivery48, T1.ViewCompanyPrinter_PersonId, T1.ViewCompanyPrinter_DateJoin, T1.ViewCompanyPrinter_DateJoinStr, T1.ViewCompanyPrinter_TotalRate, T1.ViewCompanyPrinter_TotalRateCount, T1.ViewCompanyPrinter_ZIPCode, T1.ViewCompanyPrinter_City, T1.ViewCompanyPrinter_State, T1.ViewCompanyPrinter_CountryId, T1.ViewCompanyPrinter_CountrySortName, T1.ViewCompanyPrinter_Country, T1.ViewCompanyPrinter_Location, T1.ViewCompanyPrinter_Network, T1.ViewCompanyPrinter_ImageUrl, T1.ViewCompanyPrinter_ImageUrl2)
    FROM (
        SELECT 
            T.Id AS ViewCompanyPrinter_Id, 
            T.PrinterId AS ViewCompanyPrinter_PrinterId, 
            T.CompanyId AS ViewCompanyPrinter_CompanyId, 
            T.ModelId AS ViewCompanyPrinter_ModelId, 
            T.MachineModeId AS ViewCompanyPrinter_MachineModeId, 
            T.AMProcessId AS ViewCompanyPrinter_AMProcessId, 
            T.AMTechnologyId AS ViewCompanyPrinter_AMTechnologyId, 
            T.MinPrice AS ViewCompanyPrinter_MinPrice, 
            T.MaxPrice AS ViewCompanyPrinter_MaxPrice, 
            T.PriceRange AS ViewCompanyPrinter_PriceRange, 
            T.YearRetired AS ViewCompanyPrinter_YearRetired, 
            T.DimensionX AS ViewCompanyPrinter_DimensionX, 
            T.DimensionY AS ViewCompanyPrinter_DimensionY, 
            T.DimensionZ AS ViewCompanyPrinter_DimensionZ, 
            T.DimensionXinch AS ViewCompanyPrinter_DimensionXinch, 
            T.DimensionYinch AS ViewCompanyPrinter_DimensionYinch, 
            T.DimensionZinch AS ViewCompanyPrinter_DimensionZinch, 
            T.LayerMin AS ViewCompanyPrinter_LayerMin, 
            T.LayerMax AS ViewCompanyPrinter_LayerMax, 
            T.FocusDiameterMin AS ViewCompanyPrinter_FocusDiameterMin, 
            T.FocusDiameterMininch AS ViewCompanyPrinter_FocusDiameterMininch, 
            T.FocusDiameterMax AS ViewCompanyPrinter_FocusDiameterMax, 
            T.FocusDiameterMaxinch AS ViewCompanyPrinter_FocusDiameterMaxinch, 
            T.ScanningSpeedMax AS ViewCompanyPrinter_ScanningSpeedMax, 
            T.ScanningSpeedMaxinch AS ViewCompanyPrinter_ScanningSpeedMaxinch, 
            T.ScanningSpeedMin AS ViewCompanyPrinter_ScanningSpeedMin, 
            T.ScanningSpeedMininch AS ViewCompanyPrinter_ScanningSpeedMininch, 
            T.PrintheadNo AS ViewCompanyPrinter_PrintheadNo, 
            T.Power AS ViewCompanyPrinter_Power, 
            T.FilamentDiameter AS ViewCompanyPrinter_FilamentDiameter, 
            T.Tolerance AS ViewCompanyPrinter_Tolerance, 
            T.LasersNo AS ViewCompanyPrinter_LasersNo, 
            T.LaserTypeId AS ViewCompanyPrinter_LaserTypeId, 
            T.LaserWavelength AS ViewCompanyPrinter_LaserWavelength, 
            T.MaxBeamPower AS ViewCompanyPrinter_MaxBeamPower, 
            T.OpenSourceId AS ViewCompanyPrinter_OpenSourceId, 
            T.RestrictedId AS ViewCompanyPrinter_RestrictedId, 
            T.HeatedPlatformId AS ViewCompanyPrinter_HeatedPlatformId, 
            T.ControlsId AS ViewCompanyPrinter_ControlsId, 
            T.CategoryId AS ViewCompanyPrinter_CategoryId, 
            T.Category AS ViewCompanyPrinter_Category, 
            T.Controls AS ViewCompanyPrinter_Controls, 
            T.HeatedPlatform AS ViewCompanyPrinter_HeatedPlatform, 
            T.Restricted AS ViewCompanyPrinter_Restricted, 
            T.OpenSource AS ViewCompanyPrinter_OpenSource, 
            T.LaserType AS ViewCompanyPrinter_LaserType, 
            T.AMProcess AS ViewCompanyPrinter_AMProcess, 
            T.MachineMode AS ViewCompanyPrinter_MachineMode, 
            T.Model AS ViewCompanyPrinter_Model, 
            T.Manufacturer AS ViewCompanyPrinter_Manufacturer, 
            T.ManWebsite AS ViewCompanyPrinter_ManWebsite, 
            T.ManufacturerId AS ViewCompanyPrinter_ManufacturerId, 
            T.MaterialsGeneral AS ViewCompanyPrinter_MaterialsGeneral, 
            T.MaterialsSpecific AS ViewCompanyPrinter_MaterialsSpecific, 
            T.AMTechnology AS ViewCompanyPrinter_AMTechnology, 
            T.Optics AS ViewCompanyPrinter_Optics, 
            T.ManImageUrl AS ViewCompanyPrinter_ManImageUrl, 
            T.Name AS ViewCompanyPrinter_Name, 
            T.Address AS ViewCompanyPrinter_Address, 
            T.Phone AS ViewCompanyPrinter_Phone, 
            T.Email AS ViewCompanyPrinter_Email, 
            T.Website AS ViewCompanyPrinter_Website, 
            T.Url AS ViewCompanyPrinter_Url, 
            T.DateVerified AS ViewCompanyPrinter_DateVerified, 
            T.DateVerifiedStr AS ViewCompanyPrinter_DateVerifiedStr, 
            T.IsVerified AS ViewCompanyPrinter_IsVerified, 
            T.Twitter AS ViewCompanyPrinter_Twitter, 
            T.LinkedIn AS ViewCompanyPrinter_LinkedIn, 
            T.RushDelivery24 AS ViewCompanyPrinter_RushDelivery24, 
            T.RushDelivery48 AS ViewCompanyPrinter_RushDelivery48, 
            T.PersonId AS ViewCompanyPrinter_PersonId, 
            T.DateJoin AS ViewCompanyPrinter_DateJoin, 
            T.DateJoinStr AS ViewCompanyPrinter_DateJoinStr, 
            T.TotalRate AS ViewCompanyPrinter_TotalRate, 
            T.TotalRateCount AS ViewCompanyPrinter_TotalRateCount, 
            T.ZIPCode AS ViewCompanyPrinter_ZIPCode, 
            T.City AS ViewCompanyPrinter_City, 
            T.State AS ViewCompanyPrinter_State, 
            T.CountryId AS ViewCompanyPrinter_CountryId, 
            T.CountrySortName AS ViewCompanyPrinter_CountrySortName, 
            T.Country AS ViewCompanyPrinter_Country, 
            T.Location AS ViewCompanyPrinter_Location, 
            T.Network AS ViewCompanyPrinter_Network, 
            T.ImageUrl AS ViewCompanyPrinter_ImageUrl, 
            T.ImageUrl2 AS ViewCompanyPrinter_ImageUrl2, 
            True AS _from0
        FROM EPAGRIFFINEntities.ViewCompanyPrinters AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.ViewCompanyPrinters.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView117()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewCompanyPrinters
        [EPAGRIFFINModel.ViewCompanyPrinter](T1.ViewCompanyPrinter_Id, T1.ViewCompanyPrinter_PrinterId, T1.ViewCompanyPrinter_CompanyId, T1.ViewCompanyPrinter_ModelId, T1.ViewCompanyPrinter_MachineModeId, T1.ViewCompanyPrinter_AMProcessId, T1.ViewCompanyPrinter_AMTechnologyId, T1.ViewCompanyPrinter_MinPrice, T1.ViewCompanyPrinter_MaxPrice, T1.ViewCompanyPrinter_PriceRange, T1.ViewCompanyPrinter_YearRetired, T1.ViewCompanyPrinter_DimensionX, T1.ViewCompanyPrinter_DimensionY, T1.ViewCompanyPrinter_DimensionZ, T1.ViewCompanyPrinter_DimensionXinch, T1.ViewCompanyPrinter_DimensionYinch, T1.ViewCompanyPrinter_DimensionZinch, T1.ViewCompanyPrinter_LayerMin, T1.ViewCompanyPrinter_LayerMax, T1.ViewCompanyPrinter_FocusDiameterMin, T1.ViewCompanyPrinter_FocusDiameterMininch, T1.ViewCompanyPrinter_FocusDiameterMax, T1.ViewCompanyPrinter_FocusDiameterMaxinch, T1.ViewCompanyPrinter_ScanningSpeedMax, T1.ViewCompanyPrinter_ScanningSpeedMaxinch, T1.ViewCompanyPrinter_ScanningSpeedMin, T1.ViewCompanyPrinter_ScanningSpeedMininch, T1.ViewCompanyPrinter_PrintheadNo, T1.ViewCompanyPrinter_Power, T1.ViewCompanyPrinter_FilamentDiameter, T1.ViewCompanyPrinter_Tolerance, T1.ViewCompanyPrinter_LasersNo, T1.ViewCompanyPrinter_LaserTypeId, T1.ViewCompanyPrinter_LaserWavelength, T1.ViewCompanyPrinter_MaxBeamPower, T1.ViewCompanyPrinter_OpenSourceId, T1.ViewCompanyPrinter_RestrictedId, T1.ViewCompanyPrinter_HeatedPlatformId, T1.ViewCompanyPrinter_ControlsId, T1.ViewCompanyPrinter_CategoryId, T1.ViewCompanyPrinter_Category, T1.ViewCompanyPrinter_Controls, T1.ViewCompanyPrinter_HeatedPlatform, T1.ViewCompanyPrinter_Restricted, T1.ViewCompanyPrinter_OpenSource, T1.ViewCompanyPrinter_LaserType, T1.ViewCompanyPrinter_AMProcess, T1.ViewCompanyPrinter_MachineMode, T1.ViewCompanyPrinter_Model, T1.ViewCompanyPrinter_Manufacturer, T1.ViewCompanyPrinter_ManWebsite, T1.ViewCompanyPrinter_ManufacturerId, T1.ViewCompanyPrinter_MaterialsGeneral, T1.ViewCompanyPrinter_MaterialsSpecific, T1.ViewCompanyPrinter_AMTechnology, T1.ViewCompanyPrinter_Optics, T1.ViewCompanyPrinter_ManImageUrl, T1.ViewCompanyPrinter_Name, T1.ViewCompanyPrinter_Address, T1.ViewCompanyPrinter_Phone, T1.ViewCompanyPrinter_Email, T1.ViewCompanyPrinter_Website, T1.ViewCompanyPrinter_Url, T1.ViewCompanyPrinter_DateVerified, T1.ViewCompanyPrinter_DateVerifiedStr, T1.ViewCompanyPrinter_IsVerified, T1.ViewCompanyPrinter_Twitter, T1.ViewCompanyPrinter_LinkedIn, T1.ViewCompanyPrinter_RushDelivery24, T1.ViewCompanyPrinter_RushDelivery48, T1.ViewCompanyPrinter_PersonId, T1.ViewCompanyPrinter_DateJoin, T1.ViewCompanyPrinter_DateJoinStr, T1.ViewCompanyPrinter_TotalRate, T1.ViewCompanyPrinter_TotalRateCount, T1.ViewCompanyPrinter_ZIPCode, T1.ViewCompanyPrinter_City, T1.ViewCompanyPrinter_State, T1.ViewCompanyPrinter_CountryId, T1.ViewCompanyPrinter_CountrySortName, T1.ViewCompanyPrinter_Country, T1.ViewCompanyPrinter_Location, T1.ViewCompanyPrinter_Network, T1.ViewCompanyPrinter_ImageUrl, T1.ViewCompanyPrinter_ImageUrl2)
    FROM (
        SELECT 
            T.Id AS ViewCompanyPrinter_Id, 
            T.PrinterId AS ViewCompanyPrinter_PrinterId, 
            T.CompanyId AS ViewCompanyPrinter_CompanyId, 
            T.ModelId AS ViewCompanyPrinter_ModelId, 
            T.MachineModeId AS ViewCompanyPrinter_MachineModeId, 
            T.AMProcessId AS ViewCompanyPrinter_AMProcessId, 
            T.AMTechnologyId AS ViewCompanyPrinter_AMTechnologyId, 
            T.MinPrice AS ViewCompanyPrinter_MinPrice, 
            T.MaxPrice AS ViewCompanyPrinter_MaxPrice, 
            T.PriceRange AS ViewCompanyPrinter_PriceRange, 
            T.YearRetired AS ViewCompanyPrinter_YearRetired, 
            T.DimensionX AS ViewCompanyPrinter_DimensionX, 
            T.DimensionY AS ViewCompanyPrinter_DimensionY, 
            T.DimensionZ AS ViewCompanyPrinter_DimensionZ, 
            T.DimensionXinch AS ViewCompanyPrinter_DimensionXinch, 
            T.DimensionYinch AS ViewCompanyPrinter_DimensionYinch, 
            T.DimensionZinch AS ViewCompanyPrinter_DimensionZinch, 
            T.LayerMin AS ViewCompanyPrinter_LayerMin, 
            T.LayerMax AS ViewCompanyPrinter_LayerMax, 
            T.FocusDiameterMin AS ViewCompanyPrinter_FocusDiameterMin, 
            T.FocusDiameterMininch AS ViewCompanyPrinter_FocusDiameterMininch, 
            T.FocusDiameterMax AS ViewCompanyPrinter_FocusDiameterMax, 
            T.FocusDiameterMaxinch AS ViewCompanyPrinter_FocusDiameterMaxinch, 
            T.ScanningSpeedMax AS ViewCompanyPrinter_ScanningSpeedMax, 
            T.ScanningSpeedMaxinch AS ViewCompanyPrinter_ScanningSpeedMaxinch, 
            T.ScanningSpeedMin AS ViewCompanyPrinter_ScanningSpeedMin, 
            T.ScanningSpeedMininch AS ViewCompanyPrinter_ScanningSpeedMininch, 
            T.PrintheadNo AS ViewCompanyPrinter_PrintheadNo, 
            T.Power AS ViewCompanyPrinter_Power, 
            T.FilamentDiameter AS ViewCompanyPrinter_FilamentDiameter, 
            T.Tolerance AS ViewCompanyPrinter_Tolerance, 
            T.LasersNo AS ViewCompanyPrinter_LasersNo, 
            T.LaserTypeId AS ViewCompanyPrinter_LaserTypeId, 
            T.LaserWavelength AS ViewCompanyPrinter_LaserWavelength, 
            T.MaxBeamPower AS ViewCompanyPrinter_MaxBeamPower, 
            T.OpenSourceId AS ViewCompanyPrinter_OpenSourceId, 
            T.RestrictedId AS ViewCompanyPrinter_RestrictedId, 
            T.HeatedPlatformId AS ViewCompanyPrinter_HeatedPlatformId, 
            T.ControlsId AS ViewCompanyPrinter_ControlsId, 
            T.CategoryId AS ViewCompanyPrinter_CategoryId, 
            T.Category AS ViewCompanyPrinter_Category, 
            T.Controls AS ViewCompanyPrinter_Controls, 
            T.HeatedPlatform AS ViewCompanyPrinter_HeatedPlatform, 
            T.Restricted AS ViewCompanyPrinter_Restricted, 
            T.OpenSource AS ViewCompanyPrinter_OpenSource, 
            T.LaserType AS ViewCompanyPrinter_LaserType, 
            T.AMProcess AS ViewCompanyPrinter_AMProcess, 
            T.MachineMode AS ViewCompanyPrinter_MachineMode, 
            T.Model AS ViewCompanyPrinter_Model, 
            T.Manufacturer AS ViewCompanyPrinter_Manufacturer, 
            T.ManWebsite AS ViewCompanyPrinter_ManWebsite, 
            T.ManufacturerId AS ViewCompanyPrinter_ManufacturerId, 
            T.MaterialsGeneral AS ViewCompanyPrinter_MaterialsGeneral, 
            T.MaterialsSpecific AS ViewCompanyPrinter_MaterialsSpecific, 
            T.AMTechnology AS ViewCompanyPrinter_AMTechnology, 
            T.Optics AS ViewCompanyPrinter_Optics, 
            T.ManImageUrl AS ViewCompanyPrinter_ManImageUrl, 
            T.Name AS ViewCompanyPrinter_Name, 
            T.Address AS ViewCompanyPrinter_Address, 
            T.Phone AS ViewCompanyPrinter_Phone, 
            T.Email AS ViewCompanyPrinter_Email, 
            T.Website AS ViewCompanyPrinter_Website, 
            T.Url AS ViewCompanyPrinter_Url, 
            T.DateVerified AS ViewCompanyPrinter_DateVerified, 
            T.DateVerifiedStr AS ViewCompanyPrinter_DateVerifiedStr, 
            T.IsVerified AS ViewCompanyPrinter_IsVerified, 
            T.Twitter AS ViewCompanyPrinter_Twitter, 
            T.LinkedIn AS ViewCompanyPrinter_LinkedIn, 
            T.RushDelivery24 AS ViewCompanyPrinter_RushDelivery24, 
            T.RushDelivery48 AS ViewCompanyPrinter_RushDelivery48, 
            T.PersonId AS ViewCompanyPrinter_PersonId, 
            T.DateJoin AS ViewCompanyPrinter_DateJoin, 
            T.DateJoinStr AS ViewCompanyPrinter_DateJoinStr, 
            T.TotalRate AS ViewCompanyPrinter_TotalRate, 
            T.TotalRateCount AS ViewCompanyPrinter_TotalRateCount, 
            T.ZIPCode AS ViewCompanyPrinter_ZIPCode, 
            T.City AS ViewCompanyPrinter_City, 
            T.State AS ViewCompanyPrinter_State, 
            T.CountryId AS ViewCompanyPrinter_CountryId, 
            T.CountrySortName AS ViewCompanyPrinter_CountrySortName, 
            T.Country AS ViewCompanyPrinter_Country, 
            T.Location AS ViewCompanyPrinter_Location, 
            T.Network AS ViewCompanyPrinter_Network, 
            T.ImageUrl AS ViewCompanyPrinter_ImageUrl, 
            T.ImageUrl2 AS ViewCompanyPrinter_ImageUrl2, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.ViewCompanyPrinter AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.CompanyPrinter.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView118()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CompanyPrinter
        [EPAGRIFFINModel.Store.CompanyPrinter](T1.CompanyPrinter_Id, T1.CompanyPrinter_PrinterId, T1.CompanyPrinter_CompanyId, T1.CompanyPrinter_Remark)
    FROM (
        SELECT 
            T.Id AS CompanyPrinter_Id, 
            T.PrinterId AS CompanyPrinter_PrinterId, 
            T.CompanyId AS CompanyPrinter_CompanyId, 
            T.Remark AS CompanyPrinter_Remark, 
            True AS _from0
        FROM EPAGRIFFINEntities.CompanyPrinters AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.CompanyPrinters.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView119()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CompanyPrinters
        [EPAGRIFFINModel.CompanyPrinter](T1.CompanyPrinter_Id, T1.CompanyPrinter_PrinterId, T1.CompanyPrinter_CompanyId, T1.CompanyPrinter_Remark)
    FROM (
        SELECT 
            T.Id AS CompanyPrinter_Id, 
            T.PrinterId AS CompanyPrinter_PrinterId, 
            T.CompanyId AS CompanyPrinter_CompanyId, 
            T.Remark AS CompanyPrinter_Remark, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.CompanyPrinter AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.ViewCompany.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView120()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewCompany
        [EPAGRIFFINModel.Store.ViewCompany](T1.ViewCompany_Id, T1.ViewCompany_Name, T1.ViewCompany_Address, T1.ViewCompany_Phone, T1.ViewCompany_Email, T1.ViewCompany_Website, T1.ViewCompany_Url, T1.ViewCompany_DateVerified, T1.ViewCompany_DateVerifiedStr, T1.ViewCompany_IsVerified, T1.ViewCompany_Twitter, T1.ViewCompany_LinkedIn, T1.ViewCompany_RushDelivery24, T1.ViewCompany_ImageUrl, T1.ViewCompany_ImageUrl2, T1.ViewCompany_RushDelivery48, T1.ViewCompany_PersonId, T1.ViewCompany_DateJoin, T1.ViewCompany_DateJoinStr, T1.ViewCompany_TotalRate, T1.ViewCompany_TotalRateCount, T1.ViewCompany_ZIPCode, T1.ViewCompany_City, T1.ViewCompany_State, T1.ViewCompany_CountryId, T1.ViewCompany_CountrySortName, T1.ViewCompany_Country, T1.ViewCompany_Location, T1.ViewCompany_Network, T1.ViewCompany_Remark, T1.ViewCompany_MaterialsGeneral, T1.ViewCompany_Technology, T1.ViewCompany_DimX, T1.ViewCompany_DimY, T1.ViewCompany_DimZ, T1.ViewCompany_MinLayer, T1.ViewCompany_MaxLayer)
    FROM (
        SELECT 
            T.Id AS ViewCompany_Id, 
            T.Name AS ViewCompany_Name, 
            T.Address AS ViewCompany_Address, 
            T.Phone AS ViewCompany_Phone, 
            T.Email AS ViewCompany_Email, 
            T.Website AS ViewCompany_Website, 
            T.Url AS ViewCompany_Url, 
            T.DateVerified AS ViewCompany_DateVerified, 
            T.DateVerifiedStr AS ViewCompany_DateVerifiedStr, 
            T.IsVerified AS ViewCompany_IsVerified, 
            T.Twitter AS ViewCompany_Twitter, 
            T.LinkedIn AS ViewCompany_LinkedIn, 
            T.RushDelivery24 AS ViewCompany_RushDelivery24, 
            T.ImageUrl AS ViewCompany_ImageUrl, 
            T.ImageUrl2 AS ViewCompany_ImageUrl2, 
            T.RushDelivery48 AS ViewCompany_RushDelivery48, 
            T.PersonId AS ViewCompany_PersonId, 
            T.DateJoin AS ViewCompany_DateJoin, 
            T.DateJoinStr AS ViewCompany_DateJoinStr, 
            T.TotalRate AS ViewCompany_TotalRate, 
            T.TotalRateCount AS ViewCompany_TotalRateCount, 
            T.ZIPCode AS ViewCompany_ZIPCode, 
            T.City AS ViewCompany_City, 
            T.State AS ViewCompany_State, 
            T.CountryId AS ViewCompany_CountryId, 
            T.CountrySortName AS ViewCompany_CountrySortName, 
            T.Country AS ViewCompany_Country, 
            T.Location AS ViewCompany_Location, 
            T.Network AS ViewCompany_Network, 
            T.Remark AS ViewCompany_Remark, 
            T.MaterialsGeneral AS ViewCompany_MaterialsGeneral, 
            T.Technology AS ViewCompany_Technology, 
            T.DimX AS ViewCompany_DimX, 
            T.DimY AS ViewCompany_DimY, 
            T.DimZ AS ViewCompany_DimZ, 
            T.MinLayer AS ViewCompany_MinLayer, 
            T.MaxLayer AS ViewCompany_MaxLayer, 
            True AS _from0
        FROM EPAGRIFFINEntities.ViewCompanies AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.ViewCompanies.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView121()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewCompanies
        [EPAGRIFFINModel.ViewCompany](T1.ViewCompany_Id, T1.ViewCompany_Name, T1.ViewCompany_Address, T1.ViewCompany_Phone, T1.ViewCompany_Email, T1.ViewCompany_Website, T1.ViewCompany_Url, T1.ViewCompany_DateVerified, T1.ViewCompany_DateVerifiedStr, T1.ViewCompany_IsVerified, T1.ViewCompany_Twitter, T1.ViewCompany_LinkedIn, T1.ViewCompany_RushDelivery24, T1.ViewCompany_ImageUrl, T1.ViewCompany_ImageUrl2, T1.ViewCompany_RushDelivery48, T1.ViewCompany_PersonId, T1.ViewCompany_DateJoin, T1.ViewCompany_DateJoinStr, T1.ViewCompany_TotalRate, T1.ViewCompany_TotalRateCount, T1.ViewCompany_ZIPCode, T1.ViewCompany_City, T1.ViewCompany_State, T1.ViewCompany_CountryId, T1.ViewCompany_CountrySortName, T1.ViewCompany_Country, T1.ViewCompany_Location, T1.ViewCompany_Network, T1.ViewCompany_Remark, T1.ViewCompany_MaterialsGeneral, T1.ViewCompany_Technology, T1.ViewCompany_DimX, T1.ViewCompany_DimY, T1.ViewCompany_DimZ, T1.ViewCompany_MinLayer, T1.ViewCompany_MaxLayer)
    FROM (
        SELECT 
            T.Id AS ViewCompany_Id, 
            T.Name AS ViewCompany_Name, 
            T.Address AS ViewCompany_Address, 
            T.Phone AS ViewCompany_Phone, 
            T.Email AS ViewCompany_Email, 
            T.Website AS ViewCompany_Website, 
            T.Url AS ViewCompany_Url, 
            T.DateVerified AS ViewCompany_DateVerified, 
            T.DateVerifiedStr AS ViewCompany_DateVerifiedStr, 
            T.IsVerified AS ViewCompany_IsVerified, 
            T.Twitter AS ViewCompany_Twitter, 
            T.LinkedIn AS ViewCompany_LinkedIn, 
            T.RushDelivery24 AS ViewCompany_RushDelivery24, 
            T.ImageUrl AS ViewCompany_ImageUrl, 
            T.ImageUrl2 AS ViewCompany_ImageUrl2, 
            T.RushDelivery48 AS ViewCompany_RushDelivery48, 
            T.PersonId AS ViewCompany_PersonId, 
            T.DateJoin AS ViewCompany_DateJoin, 
            T.DateJoinStr AS ViewCompany_DateJoinStr, 
            T.TotalRate AS ViewCompany_TotalRate, 
            T.TotalRateCount AS ViewCompany_TotalRateCount, 
            T.ZIPCode AS ViewCompany_ZIPCode, 
            T.City AS ViewCompany_City, 
            T.State AS ViewCompany_State, 
            T.CountryId AS ViewCompany_CountryId, 
            T.CountrySortName AS ViewCompany_CountrySortName, 
            T.Country AS ViewCompany_Country, 
            T.Location AS ViewCompany_Location, 
            T.Network AS ViewCompany_Network, 
            T.Remark AS ViewCompany_Remark, 
            T.MaterialsGeneral AS ViewCompany_MaterialsGeneral, 
            T.Technology AS ViewCompany_Technology, 
            T.DimX AS ViewCompany_DimX, 
            T.DimY AS ViewCompany_DimY, 
            T.DimZ AS ViewCompany_DimZ, 
            T.MinLayer AS ViewCompany_MinLayer, 
            T.MaxLayer AS ViewCompany_MaxLayer, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.ViewCompany AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINModelStoreContainer.ViewPerson.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView122()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewPerson
        [EPAGRIFFINModel.Store.ViewPerson](T1.ViewPerson_Id, T1.ViewPerson_DateCreate, T1.ViewPerson_SexId, T1.ViewPerson_FirstName, T1.ViewPerson_LastName, T1.ViewPerson_DateBirth, T1.ViewPerson_Email, T1.ViewPerson_Mobile, T1.ViewPerson_Address, T1.ViewPerson_IsActive, T1.ViewPerson_IsDeleted, T1.ViewPerson_Remark, T1.ViewPerson_Nickname, T1.ViewPerson_IDNo, T1.ViewPerson_UserId, T1.ViewPerson_ImageUrl, T1.ViewPerson_ImageUrl2, T1.ViewPerson_CountryId, T1.ViewPerson_ZIPCode, T1.ViewPerson_State, T1.ViewPerson_City, T1.ViewPerson_Company, T1.ViewPerson_University, T1.ViewPerson_Website, T1.ViewPerson_Twitter, T1.ViewPerson_LinkedIn, T1.ViewPerson_Headline, T1.ViewPerson_DegreeId, T1.ViewPerson_PositionId, T1.ViewPerson_DateJoin, T1.ViewPerson_DateJoinStr, T1.ViewPerson_Name, T1.ViewPerson_FieldOfStudyId, T1.ViewPerson_Position, T1.ViewPerson_FieldOfStudy, T1.ViewPerson_Degree, T1.ViewPerson_CountrySortName, T1.ViewPerson_Country, T1.ViewPerson_Location, T1.ViewPerson_Education, T1.ViewPerson_Networks, T1.ViewPerson_NetworkIds)
    FROM (
        SELECT 
            T.Id AS ViewPerson_Id, 
            T.DateCreate AS ViewPerson_DateCreate, 
            T.SexId AS ViewPerson_SexId, 
            T.FirstName AS ViewPerson_FirstName, 
            T.LastName AS ViewPerson_LastName, 
            T.DateBirth AS ViewPerson_DateBirth, 
            T.Email AS ViewPerson_Email, 
            T.Mobile AS ViewPerson_Mobile, 
            T.Address AS ViewPerson_Address, 
            T.IsActive AS ViewPerson_IsActive, 
            T.IsDeleted AS ViewPerson_IsDeleted, 
            T.Remark AS ViewPerson_Remark, 
            T.Nickname AS ViewPerson_Nickname, 
            T.IDNo AS ViewPerson_IDNo, 
            T.UserId AS ViewPerson_UserId, 
            T.ImageUrl AS ViewPerson_ImageUrl, 
            T.ImageUrl2 AS ViewPerson_ImageUrl2, 
            T.CountryId AS ViewPerson_CountryId, 
            T.ZIPCode AS ViewPerson_ZIPCode, 
            T.State AS ViewPerson_State, 
            T.City AS ViewPerson_City, 
            T.Company AS ViewPerson_Company, 
            T.University AS ViewPerson_University, 
            T.Website AS ViewPerson_Website, 
            T.Twitter AS ViewPerson_Twitter, 
            T.LinkedIn AS ViewPerson_LinkedIn, 
            T.Headline AS ViewPerson_Headline, 
            T.DegreeId AS ViewPerson_DegreeId, 
            T.PositionId AS ViewPerson_PositionId, 
            T.DateJoin AS ViewPerson_DateJoin, 
            T.DateJoinStr AS ViewPerson_DateJoinStr, 
            T.Name AS ViewPerson_Name, 
            T.FieldOfStudyId AS ViewPerson_FieldOfStudyId, 
            T.Position AS ViewPerson_Position, 
            T.FieldOfStudy AS ViewPerson_FieldOfStudy, 
            T.Degree AS ViewPerson_Degree, 
            T.CountrySortName AS ViewPerson_CountrySortName, 
            T.Country AS ViewPerson_Country, 
            T.Location AS ViewPerson_Location, 
            T.Education AS ViewPerson_Education, 
            T.Networks AS ViewPerson_Networks, 
            T.NetworkIds AS ViewPerson_NetworkIds, 
            True AS _from0
        FROM EPAGRIFFINEntities.ViewPersons AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for EPAGRIFFINEntities.ViewPersons.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView123()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ViewPersons
        [EPAGRIFFINModel.ViewPerson](T1.ViewPerson_Id, T1.ViewPerson_DateCreate, T1.ViewPerson_SexId, T1.ViewPerson_FirstName, T1.ViewPerson_LastName, T1.ViewPerson_DateBirth, T1.ViewPerson_Email, T1.ViewPerson_Mobile, T1.ViewPerson_Address, T1.ViewPerson_IsActive, T1.ViewPerson_IsDeleted, T1.ViewPerson_Remark, T1.ViewPerson_Nickname, T1.ViewPerson_IDNo, T1.ViewPerson_UserId, T1.ViewPerson_ImageUrl, T1.ViewPerson_ImageUrl2, T1.ViewPerson_CountryId, T1.ViewPerson_ZIPCode, T1.ViewPerson_State, T1.ViewPerson_City, T1.ViewPerson_Company, T1.ViewPerson_University, T1.ViewPerson_Website, T1.ViewPerson_Twitter, T1.ViewPerson_LinkedIn, T1.ViewPerson_Headline, T1.ViewPerson_DegreeId, T1.ViewPerson_PositionId, T1.ViewPerson_DateJoin, T1.ViewPerson_DateJoinStr, T1.ViewPerson_Name, T1.ViewPerson_FieldOfStudyId, T1.ViewPerson_Position, T1.ViewPerson_FieldOfStudy, T1.ViewPerson_Degree, T1.ViewPerson_CountrySortName, T1.ViewPerson_Country, T1.ViewPerson_Location, T1.ViewPerson_Education, T1.ViewPerson_Networks, T1.ViewPerson_NetworkIds)
    FROM (
        SELECT 
            T.Id AS ViewPerson_Id, 
            T.DateCreate AS ViewPerson_DateCreate, 
            T.SexId AS ViewPerson_SexId, 
            T.FirstName AS ViewPerson_FirstName, 
            T.LastName AS ViewPerson_LastName, 
            T.DateBirth AS ViewPerson_DateBirth, 
            T.Email AS ViewPerson_Email, 
            T.Mobile AS ViewPerson_Mobile, 
            T.Address AS ViewPerson_Address, 
            T.IsActive AS ViewPerson_IsActive, 
            T.IsDeleted AS ViewPerson_IsDeleted, 
            T.Remark AS ViewPerson_Remark, 
            T.Nickname AS ViewPerson_Nickname, 
            T.IDNo AS ViewPerson_IDNo, 
            T.UserId AS ViewPerson_UserId, 
            T.ImageUrl AS ViewPerson_ImageUrl, 
            T.ImageUrl2 AS ViewPerson_ImageUrl2, 
            T.CountryId AS ViewPerson_CountryId, 
            T.ZIPCode AS ViewPerson_ZIPCode, 
            T.State AS ViewPerson_State, 
            T.City AS ViewPerson_City, 
            T.Company AS ViewPerson_Company, 
            T.University AS ViewPerson_University, 
            T.Website AS ViewPerson_Website, 
            T.Twitter AS ViewPerson_Twitter, 
            T.LinkedIn AS ViewPerson_LinkedIn, 
            T.Headline AS ViewPerson_Headline, 
            T.DegreeId AS ViewPerson_DegreeId, 
            T.PositionId AS ViewPerson_PositionId, 
            T.DateJoin AS ViewPerson_DateJoin, 
            T.DateJoinStr AS ViewPerson_DateJoinStr, 
            T.Name AS ViewPerson_Name, 
            T.FieldOfStudyId AS ViewPerson_FieldOfStudyId, 
            T.Position AS ViewPerson_Position, 
            T.FieldOfStudy AS ViewPerson_FieldOfStudy, 
            T.Degree AS ViewPerson_Degree, 
            T.CountrySortName AS ViewPerson_CountrySortName, 
            T.Country AS ViewPerson_Country, 
            T.Location AS ViewPerson_Location, 
            T.Education AS ViewPerson_Education, 
            T.Networks AS ViewPerson_Networks, 
            T.NetworkIds AS ViewPerson_NetworkIds, 
            True AS _from0
        FROM EPAGRIFFINModelStoreContainer.ViewPerson AS T
    ) AS T1");
        }
    }
}
